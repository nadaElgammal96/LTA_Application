
package com.fym.lta.UI;

import com.fym.lta.BAO.BaoFactory;
import com.fym.lta.BAO.EquipSpecificationBao;
import com.fym.lta.DTO.EquipSpecificationDto;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Nada El-Gammal
 */

public class EqSpecificationJPanel extends javax.swing.JPanel {

private EquipSpecificationBao business ;

    private void setTableModel(List<EquipSpecificationDto> eq_specif){
        int size=0;
        if(eq_specif != null && !eq_specif.isEmpty()){
            size = eq_specif.size();
            }
        Object [][] eqSpArr = new Object [size][3];
        for(int i =0;i<size;i++){
            eqSpArr[i][0] = eq_specif.get(i).getId();
            eqSpArr[i][1] = eq_specif.get(i).getName();
           eqSpArr[i][2] = eq_specif.get(i).getValue();
        }
        EqSpecificationTable.setModel(new javax.swing.table.DefaultTableModel(eqSpArr,
            new String [] {
                "ID", "Name", "Value"
            }
        ));
        
        
    }

    /** Creates new form EqSpecificationJPanel */
    public EqSpecificationJPanel() {
        try {
                   business = new BaoFactory().createEquipmentSpecificationBao();

                   initComponents();
                   setTableModel(business.listall());            
                   
               } catch (Exception e) {
                   e.printStackTrace();
               }
        }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        EqSpecificationTable = new javax.swing.JTable();
        idText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        searchText = new javax.swing.JTextField();
        valueText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();

        EqSpecificationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EqSpecificationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EqSpecificationTableMouseClicked(evt);
            }
        });
        EqSpecificationTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EqSpecificationTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(EqSpecificationTable);
        if (EqSpecificationTable.getColumnModel().getColumnCount() > 0) {
            EqSpecificationTable.getColumnModel().getColumn(0).setHeaderValue("ID");
            EqSpecificationTable.getColumnModel().getColumn(1).setHeaderValue("Name");
            EqSpecificationTable.getColumnModel().getColumn(2).setHeaderValue("Value");
        }

        idText.setText("Enter ID");
        idText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                idTextFocusLost(evt);
            }
        });
        idText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextActionPerformed(evt);
            }
        });

        nameText.setText("Enter Specification Name");
        nameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameTextFocusLost(evt);
            }
        });
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        searchText.setText("Enter Text to Search");
        searchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFocusLost(evt);
            }
        });
        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });

        valueText.setText("Enter Specification Value");
        valueText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                valueTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                valueTextFocusLost(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("Name:");

        jLabel3.setText("Value:");

        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addGap(47, 47, 47)
                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel3)
                .addGap(48, 48, 48)
                .addComponent(valueText, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(searchButton)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3))
                    .addComponent(valueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newButton)
                    .addComponent(deleteButton)
                    .addComponent(refreshButton)
                    .addComponent(updateButton)))
        );
    }//GEN-END:initComponents

        EquipSpecificationDto eq_spec = new EquipSpecificationDto();

    private void searchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusGained
    if (searchText.getText().equalsIgnoreCase("Enter Text to Search"))
        searchText.setText(""); 
    }//GEN-LAST:event_searchTextFocusGained

    private void searchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusLost
    if (searchText.getText().trim().equalsIgnoreCase(""))
        searchText.setText("Enter Text to Search");
    }//GEN-LAST:event_searchTextFocusLost

    private void idTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idTextFocusGained
    if (idText.getText().equalsIgnoreCase("Enter ID"))
        idText.setText("");  
    }//GEN-LAST:event_idTextFocusGained

    private void idTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idTextFocusLost
    if (idText.getText().trim().equalsIgnoreCase(""))
        idText.setText("Enter ID");  
    }//GEN-LAST:event_idTextFocusLost

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextActionPerformed

    private void nameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFocusGained
    if (nameText.getText().equalsIgnoreCase("Enter Specification Name"))
        nameText.setText("");  
    }//GEN-LAST:event_nameTextFocusGained

    private void nameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFocusLost
    if (nameText.getText().trim().equalsIgnoreCase(""))
        nameText.setText("Enter Specification Name");  
    }//GEN-LAST:event_nameTextFocusLost

    private void valueTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valueTextFocusGained
    if (valueText.getText().equalsIgnoreCase("Enter Specification Value"))
        valueText.setText("");
    }//GEN-LAST:event_valueTextFocusGained

    private void valueTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valueTextFocusLost
    if (valueText.getText().trim().equalsIgnoreCase(""))
        valueText.setText("Enter Specification Value");  
    }//GEN-LAST:event_valueTextFocusLost

    private void EqSpecificationTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EqSpecificationTableKeyPressed
    if( evt.getExtendedKeyCode()==KeyEvent.VK_UP || evt.getExtendedKeyCode()==KeyEvent.VK_DOWN ){
        int row = EqSpecificationTable.getSelectedRow();
        idText.setText(EqSpecificationTable.getModel().getValueAt(row,0).toString());
        nameText.setText(EqSpecificationTable.getModel().getValueAt(row,1).toString());
        valueText.setText(EqSpecificationTable.getModel().getValueAt(row,2).toString());
    }
    }//GEN-LAST:event_EqSpecificationTableKeyPressed

    private void EqSpecificationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EqSpecificationTableMouseClicked
    int row = EqSpecificationTable.getSelectedRow();
    idText.setText(EqSpecificationTable.getModel().getValueAt(row,0).toString());
    nameText.setText(EqSpecificationTable.getModel().getValueAt(row,1).toString());
    valueText.setText(EqSpecificationTable.getModel().getValueAt(row,2).toString());
    }//GEN-LAST:event_EqSpecificationTableMouseClicked

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        try{
            if(checkValidity()){
               eq_spec.setId(Integer.parseInt(idText.getText()));
               eq_spec.setName(nameText.getText());
               eq_spec.setValue(valueText.getText());
               if(business.insert(eq_spec)){
                   JOptionPane.showMessageDialog(this, "Specification Inserted Successfully");
                   setTableModel(business.listall());
                   EqSpecificationTable.repaint();
               }
               else{
                   EqSpecificationTable.repaint();
               }
            }
            idText.setText("Enter ID");
            nameText.setText("Enter Specification Name");
            valueText.setText("Enter Specification Value");
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_newButtonActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try{
            int r = EqSpecificationTable.getSelectedRow();
            eq_spec.setId(Integer.parseInt(EqSpecificationTable.getModel().getValueAt(r,0).toString()));
            eq_spec.setName(EqSpecificationTable.getModel().getValueAt(r,1).toString());
            eq_spec.setValue(EqSpecificationTable.getModel().getValueAt(r,2).toString());
            if(business.delete(eq_spec)){
                JOptionPane.showMessageDialog(this, "Equipment Deleted Successfully");
                setTableModel(business.listall());
                EqSpecificationTable.repaint();
            }else{
                EqSpecificationTable.repaint();
            }
        }
        catch(java.lang.ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "Please select row from table to delete");
            }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        try {
            setTableModel(business.listall());
            EqSpecificationTable.repaint();
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try{
            if (checkValidity()){
                eq_spec.setId(Integer.parseInt(idText.getText()));
                eq_spec.setName(nameText.getText());
                eq_spec.setValue(valueText.getText());
                if(business.update(eq_spec)){
                    JOptionPane.showMessageDialog(this, "Specification Updated Successfully");
                    setTableModel(business.listall());
                    EqSpecificationTable.repaint();
                }
                else{
                    EqSpecificationTable.repaint();
                }
                idText.setText("Enter ID");
                nameText.setText("Enter Specification Name");
                valueText.setText("Enter Specification Value");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void idTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try{
            String x = searchText.getText();
            if( ! (x.equals("Enter Text to Search")) ){
            List<EquipSpecificationDto> search_list = null;
             eq_spec.setSearch(searchText.getText());
            search_list = business.searchFor(eq_spec);
            if(search_list != null){
                setTableModel(search_list);
                EqSpecificationTable.repaint();
            }
            else{
                JOptionPane.showMessageDialog(this,"Specification Not Found");
                setTableModel(search_list);
                EqSpecificationTable.repaint();
            }}
            else
                JOptionPane.showMessageDialog(this,"Please Enter Text To Search For");
            searchText.setText("Enter Text to Search");
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private boolean checkValidity(){

        // check input 1
        try{
            if(idText.getText().equalsIgnoreCase("Enter ID")){
                JOptionPane.showMessageDialog(this, "Please, enter id number","",JOptionPane.ERROR_MESSAGE);
                return false;            
            }
            Integer.parseInt(idText.getText());
           // return true;
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "ID is invalid! \n (please enter a number)");
                     // own implemented dialog
            return false;
        }
        try{
            if(nameText.getText().equalsIgnoreCase("Enter Specification Name")){
                JOptionPane.showMessageDialog(this, "Please, Enter Specification Name");
                return false;
            }
                Integer.parseInt(nameText.getText());
                JOptionPane.showMessageDialog(this, "Specification Name is invalid! \n (please enter a string)");
                return false;
            }catch (NumberFormatException e){
                         // own implemented dialog
                
        try{
            if(valueText.getText().equalsIgnoreCase("Enter Specification Value")){
                JOptionPane.showMessageDialog(this, "Please, Enter Specification Value");
                return false;
            }
                //Integer.parseInt(valueText.getText());
                //JOptionPane.showMessageDialog(this, "Description is invalid! \n (please enter a string)");
                return true;
            }catch (NumberFormatException es){
        return true;
    }}}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable EqSpecificationTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton newButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField valueText;
    // End of variables declaration//GEN-END:variables

}
