
package com.fym.lta.UI;

import com.fym.lta.BAO.BaoFactory;
import com.fym.lta.BAO.BuildinBao;
import com.fym.lta.DAO.BuildingDao;
import com.fym.lta.DAO.DaoFactory;
import com.fym.lta.DTO.BuildingDto;

import java.util.List;

import javax.swing.JOptionPane;

/**
 *
 * @author Islam
 */
public class BuildingPanel extends javax.swing.JPanel {

    /** Creates new form BuildingJPanel */
    public BuildingPanel() {
        try{
        initComponents();
            BuildingDao build;
            build = new DaoFactory().createBuildingDao();
            setTableModel(build.viewAll());  
        }catch (Exception e) {
                    // TODO: Add catch code
                    e.printStackTrace();
                }

    }
    /** Creates new form EmpMainFram */
    private void setTableModel(List<BuildingDto> builds){
        int size=0;
        if(builds != null && !builds.isEmpty()){
            size = builds.size();
            }
        Object [][] buildArr = new Object [size][3];
        for(int i =0;i<size;i++){
            buildArr[i][0] = builds.get(i).getId();
            buildArr[i][1] = builds.get(i).getCode();
            buildArr[i][2] = builds.get(i).getDescription();
        }
        BuildTable.setModel(new javax.swing.table.DefaultTableModel(buildArr,
            new String [] {
                "Id", "Code", "Description"
            }
        ));
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        NameLabel = new javax.swing.JLabel();
        IdText = new javax.swing.JTextField();
        CodeText = new javax.swing.JTextField();
        NameText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        BuildTable = new javax.swing.JTable();
        Nwe = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Refresh = new javax.swing.JButton();
        SearchText = new javax.swing.JTextField();
        IdLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        CodeLabel = new javax.swing.JLabel();

        NameLabel.setText("Description");

        IdText.setText("Enter The ID");
        IdText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IdTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IdTextFocusLost(evt);
            }
        });

        CodeText.setText("Enter The Code");
        CodeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CodeTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CodeTextFocusLost(evt);
            }
        });

        NameText.setText("Enter The Description");
        NameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NameTextFocusLost(evt);
            }
        });

        BuildTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Code", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BuildTable);

        Nwe.setText("New");
        Nwe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NweActionPerformed(evt);
            }
        });

        Delete.setText("Delete ");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Save.setText("Update");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        SearchText.setText("What do you want to search ?");
        SearchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchTextFocusLost(evt);
            }
        });

        IdLabel.setText("Id");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        CodeLabel.setText("Code");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NameText))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IdLabel)
                            .addComponent(CodeLabel))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IdText)
                            .addComponent(CodeText))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(SearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Nwe, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IdLabel)
                            .addComponent(IdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(CodeLabel))
                    .addComponent(CodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Save)
                    .addComponent(Refresh)
                    .addComponent(Delete)
                    .addComponent(Nwe))
                .addContainerGap())
        );
    }//GEN-END:initComponents

    private void IdTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusGained
        // TODO add your handling code here:
        if(IdText.getText().equalsIgnoreCase("Enter The Id")){
            IdText.setText("");
        }
    }//GEN-LAST:event_IdTextFocusGained

    private void IdTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusLost
        // TODO add your handling code here:
        if(IdText.getText().trim().equalsIgnoreCase("")){
            IdText.setText("Enter The Id");
        }
    }//GEN-LAST:event_IdTextFocusLost

    private void CodeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodeTextFocusGained
        // TODO add your handling code here:
        if(CodeText.getText().equalsIgnoreCase("Enter The Code")){
            CodeText.setText("");}
    }//GEN-LAST:event_CodeTextFocusGained

    private void CodeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodeTextFocusLost
        // TODO add your handling code here:
        if(CodeText.getText().trim().equalsIgnoreCase("")){
            CodeText.setText("Enter The Code");}
    }//GEN-LAST:event_CodeTextFocusLost

    private void NameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameTextFocusGained
        // TODO add your handling code here:
        if(NameText.getText().equalsIgnoreCase("Enter The Description")){
            NameText.setText("");}
    }//GEN-LAST:event_NameTextFocusGained

    private void NameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameTextFocusLost
        // TODO add your handling code here:
        if(NameText.getText().trim().equalsIgnoreCase("")){
            NameText.setText("Enter The Description");   }                                                                   
    }//GEN-LAST:event_NameTextFocusLost

    private void NweActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NweActionPerformed
        // TODO add your handling code here:
        try{
            if(checkValidity()){
            BuildingDto b = new BuildingDto();
            BuildinBao build = new BaoFactory().createBuildingBao();
            BuildingDao bdao = new DaoFactory().createBuildingDao();
            b.setCode(CodeText.getText());
            b.setId(Integer.parseInt(IdText.getText()));
            b.setDescription(NameText.getText());
            
            if(build.insert(b)){
                JOptionPane.showMessageDialog(this, "Building Saved Successfully");
                setTableModel(bdao.viewAll());
                BuildTable.repaint();
            }
            else{
                JOptionPane.showMessageDialog(this, "The Building is already exist");
                BuildTable.repaint();
            }}
                IdText.setText("Enter The ID");
                CodeText.setText("Enter The Code");
                NameText.setText("Enter The Description");
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_NweActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        try{
            if(BuildTable.getSelectedRowCount()==1)
            {
                BuildingDto b = new BuildingDto();
                BuildingDao bdao;
                bdao = new DaoFactory().createBuildingDao();
                BuildinBao build = new BaoFactory().createBuildingBao();
                String s = (String) BuildTable.getValueAt(BuildTable.getSelectedRow(), 1);
                b.setCode(s);
                if(build.delete(b))
                {
                    JOptionPane.showMessageDialog(this, "Building Deleted Successfully");
                }
                setTableModel(bdao.viewAll());
                BuildTable.repaint();
            }else{
                JOptionPane.showMessageDialog(this, "Please Select Building in table ");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        
        try{
            if(checkValidity()){
            BuildingDto b = new BuildingDto();
            BuildinBao build = new BaoFactory().createBuildingBao();
            BuildingDao bdao = new DaoFactory().createBuildingDao();
            b.setCode(CodeText.getText());
            b.setId(Integer.parseInt(IdText.getText()));
            b.setDescription(NameText.getText());
            if(build.update(b)){
                JOptionPane.showMessageDialog(this, "Building updated Successfully");
                setTableModel(bdao.viewAll());
                BuildTable.repaint();
            }else{
                JOptionPane.showMessageDialog(this, "The Building is not exist");
                BuildTable.repaint();
            }}
            IdText.setText("Enter The ID");
            CodeText.setText("Enter The Code");
            NameText.setText("Enter The Description");
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        try{
            BuildingDao build;
            build = new DaoFactory().createBuildingDao();
            setTableModel(build.viewAll());
            BuildTable.repaint();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void SearchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchTextFocusGained
        // TODO add your handling code here:
        if(SearchText.getText().equalsIgnoreCase("What do you want to search ?")){
            SearchText.setText("");}
    }//GEN-LAST:event_SearchTextFocusGained

    private void SearchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchTextFocusLost
        // TODO add your handling code here:
        if(SearchText.getText().trim().equalsIgnoreCase("")){
            SearchText.setText("What do you want to search ?");}
    }//GEN-LAST:event_SearchTextFocusLost
// Search Button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            BuildingDto b = new BuildingDto();
            List<BuildingDto> buildss = null;
            BuildingDao bdao = new DaoFactory().createBuildingDao();
            BuildinBao build = new BaoFactory().createBuildingBao();
            b.setSearch(SearchText.getText());
            buildss = build.searchFor(b);

            if(buildss!=null){
                JOptionPane.showMessageDialog(this, "Building Found");
                setTableModel(buildss);
                BuildTable.repaint();
            }else{
                JOptionPane.showMessageDialog(this, "Building is not Exist");
                setTableModel(bdao.viewAll());
                BuildTable.repaint();
            }
            SearchText.setText("What do you want to search ?");
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    private boolean checkValidity(){

        // check input 1
        try{
            if(IdText.getText().equalsIgnoreCase("Enter The ID")){
                JOptionPane.showMessageDialog(this, "Please, enter id number","",JOptionPane.ERROR_MESSAGE);
                return false;            
            }
            Integer.parseInt(IdText.getText());
           // return true;
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "ID is invalid! \n (please enter a number)");
                     // own implemented dialog
            return false;
        }
        try{
            if(CodeText.getText().equalsIgnoreCase("Enter The Code")){
                JOptionPane.showMessageDialog(this, "Please, enter code");
                return false;
            }
                Integer.parseInt(CodeText.getText());
                JOptionPane.showMessageDialog(this, "Code is invalid! \n (please enter a string)");
                return false;
            }catch (NumberFormatException e){
                         // own implemented dialog
                
        try{
            if(NameText.getText().equalsIgnoreCase("Enter The Description")){
                JOptionPane.showMessageDialog(this, "Please, enter description");
                return false;
            }
                Integer.parseInt(NameText.getText());
                JOptionPane.showMessageDialog(this, "Description is invalid! \n (please enter a string)");
                return false;
            }catch (NumberFormatException es){
                         // own implemented dialog
              //  return true;
        return true;
    }}}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BuildTable;
    private javax.swing.JLabel CodeLabel;
    private javax.swing.JTextField CodeText;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel IdLabel;
    private javax.swing.JTextField IdText;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameText;
    private javax.swing.JButton Nwe;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton Save;
    private javax.swing.JTextField SearchText;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
