
package com.fym.lta.UI;

import com.fym.lta.BAO.BaoFactory;
import com.fym.lta.BAO.BuildingBao;
import com.fym.lta.DAO.BuildingDao;
import com.fym.lta.DAO.DaoFactory;
import com.fym.lta.DAO.RoleScreenDao;
import com.fym.lta.DTO.BuildingDto;
import com.fym.lta.DTO.UserDto;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;

import java.util.List;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Islam
 */
public class BuildingPanel extends javax.swing.JPanel {
    @SuppressWarnings({ "compatibility:5549122475143851583",
      "oracle.jdeveloper.java.serialversionuid-stale" })
    private static final long serialVersionUID = 1L;
    
    static UserDto user=new UserDto();

    /** Creates new form BuildingJPanel */
    public BuildingPanel(UserDto u) {
        try{
            user=u;
            initComponents();
 
            viewonly(user);
            BuildingBao bao;
            bao = new BaoFactory().createBuildingBao();
            setTableModel(bao.ListAll());
          
          
        }catch (Exception e) {
                    // TODO: Add catch code
                    e.printStackTrace();
                }

    }
    /** Creates new form EmpMainFram */
    private void setTableModel(List<BuildingDto> builds){
        int size=0;
        if(builds != null && !builds.isEmpty()){
            size = builds.size();
            }
        Object [][] buildArr = new Object [size][4];
        for(int i =0;i<size;i++){
            buildArr[i][0] = builds.get(i).getId();
            buildArr[i][1] = builds.get(i).getCode();
            buildArr[i][2] = builds.get(i).getDescription();
            buildArr[i][3] = builds.get(i).getFloorsNo();
    
        }
        BuildTable.setModel(new javax.swing.table.DefaultTableModel(buildArr,
            new String [] {
                "Id", "Code", "Description" ,"Floors number"
            }
        ));

    //change header color
    BuildTable.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer()
    {

      @Override
      public Component getTableCellRendererComponent(JTable table,
        Object value, boolean isSelected, boolean hasFocus, int row,
        int column)
      {

        JLabel l =
          (JLabel) super.getTableCellRendererComponent(table, value,
          isSelected, hasFocus, row, column);
        l.setBackground(Color.decode("#0081D3"));
        // l.setBorder(new EtchedBorder());

        l.setForeground(Color.white);

        return l;
      }
    });

    //label under tabel show types count viewed in table
    no_of_rows.setText("Table result: "+
      Integer.toString(BuildTable.getRowCount())+"  Buildings");
        
    }


  private void viewonly(UserDto u)
  {
    
    u.setScreen_name("Building");
    
    RoleScreenDao dao = new DaoFactory().createRoleScreenDao();
    if(dao.viewonly(u))
      {
        EditPanel.setVisible(false);
        System.out.println(" \n done panel");
      }
  }
  
  
  /**For update an existing building*/
  private void update()
  {
    try{
      if(checkValidity()){
        
      BuildingDto building = new BuildingDto();  //create building dto objrct
      BuildingBao bao = new BaoFactory().createBuildingBao();   // create bao object
      
      building.setCode(CodeText.getText());  //get code 
      building.setId(Integer.parseInt(IdText.getText())); //get id
      building.setDescription(DesText.getText());  //get description
      
      
      if(bao.update(building,user)){  //if update done
          JOptionPane.showMessageDialog(this, "Building updated Successfully" ,"Done",1);
          //refresh table
          setTableModel(bao.ListAll());
          BuildTable.repaint();
      }else{
          JOptionPane.showMessageDialog(this, "This Building does'nt exist!" ,"Not Found",JOptionPane.ERROR_MESSAGE);
          BuildTable.repaint();
      }}
    
  }catch(Exception e){
      e.printStackTrace();
  }
  }
  
  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  private void initComponents()//GEN-BEGIN:initComponents
  {

    jScrollPane1 = new javax.swing.JScrollPane();
    BuildTable = new javax.swing.JTable();
    SearchText = new javax.swing.JTextField();
    EditPanel = new javax.swing.JPanel();
    IdText = new javax.swing.JTextField();
    IdLabel = new javax.swing.JLabel();
    CodeText = new javax.swing.JTextField();
    CodeLabel = new javax.swing.JLabel();
    DesText = new javax.swing.JTextField();
    NameLabel = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    SavePanel = new javax.swing.JPanel();
    Save = new javax.swing.JButton();
    DeletePanel = new javax.swing.JPanel();
    Delete = new javax.swing.JButton();
    ClearPanel = new javax.swing.JPanel();
    clear = new javax.swing.JButton();
    no_of_rows = new java.awt.Label();
    jLabel8 = new javax.swing.JLabel();
    jSeparator1 = new javax.swing.JSeparator();
    searchPanel = new javax.swing.JPanel();
    search = new javax.swing.JButton();
    RefreshPanel = new javax.swing.JPanel();
    Refresh = new javax.swing.JButton();

    setBackground(new java.awt.Color(245, 245, 245));
    setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    BuildTable.setAutoCreateRowSorter(true);
    BuildTable.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    BuildTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][]
      {

      },
      new String []
      {
        "Id", "Code", "Description"
      }
    )
    {
      boolean[] canEdit = new boolean []
      {
        false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex)
      {
        return canEdit [columnIndex];
      }
    });
    BuildTable.setFillsViewportHeight(true);
    BuildTable.setRowHeight(25);
    BuildTable.setSelectionBackground(new java.awt.Color(0, 153, 204));
    BuildTable.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        BuildTableMouseClicked(evt);
      }
    });
    BuildTable.addKeyListener(new java.awt.event.KeyAdapter()
    {
      public void keyPressed(java.awt.event.KeyEvent evt)
      {
        BuildTableKeyPressed(evt);
      }
    });
    jScrollPane1.setViewportView(BuildTable);
    if (BuildTable.getColumnModel().getColumnCount() > 0)
    {
      BuildTable.getColumnModel().getColumn(0).setHeaderValue("Id");
      BuildTable.getColumnModel().getColumn(1).setHeaderValue("Code");
      BuildTable.getColumnModel().getColumn(2).setHeaderValue("Description");
    }

    add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 700, 750));

    SearchText.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    SearchText.setText("What do you want to search ?");
    SearchText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    SearchText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        SearchTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        SearchTextFocusLost(evt);
      }
    });
    SearchText.addKeyListener(new java.awt.event.KeyAdapter()
    {
      public void keyPressed(java.awt.event.KeyEvent evt)
      {
        SearchTextKeyPressed(evt);
      }
    });
    add(SearchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 620, 50));

    EditPanel.setBackground(new java.awt.Color(245, 245, 245));
    EditPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    IdText.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    IdText.setText("Enter Building ID");
    IdText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    IdText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        IdTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        IdTextFocusLost(evt);
      }
    });
    EditPanel.add(IdText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 570, 60));

    IdLabel.setBackground(new java.awt.Color(0, 51, 204));
    IdLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    IdLabel.setForeground(new java.awt.Color(0, 51, 204));
    IdLabel.setText("ID");
    EditPanel.add(IdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 166, 20, 40));

    CodeText.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    CodeText.setText("Enter Building code");
    CodeText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    CodeText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        CodeTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        CodeTextFocusLost(evt);
      }
    });
    CodeText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        CodeTextActionPerformed(evt);
      }
    });
    EditPanel.add(CodeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 570, 60));

    CodeLabel.setBackground(new java.awt.Color(0, 51, 204));
    CodeLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    CodeLabel.setForeground(new java.awt.Color(0, 51, 204));
    CodeLabel.setText("Code");
    EditPanel.add(CodeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 70, 60));

    DesText.setFont(SearchText.getFont());
    DesText.setText("Enter Building Description");
    DesText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    DesText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        DesTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        DesTextFocusLost(evt);
      }
    });
    EditPanel.add(DesText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 560, 60));

    NameLabel.setBackground(new java.awt.Color(0, 51, 204));
    NameLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    NameLabel.setForeground(new java.awt.Color(0, 51, 204));
    NameLabel.setText("Description");
    EditPanel.add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, 50));

    jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fym/lta/Images/icons8_geo_fence_128px.png"))); // NOI18N
    EditPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 140, 130));

    SavePanel.setBackground(new java.awt.Color(0, 129, 211));
    SavePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    Save.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    Save.setForeground(new java.awt.Color(255, 255, 255));
    Save.setText("Save");
    Save.setBorderPainted(false);
    Save.setContentAreaFilled(false);
    Save.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        SaveMouseMoved(evt);
      }
    });
    Save.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        SaveMouseExited(evt);
      }
    });
    Save.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        SaveActionPerformed(evt);
      }
    });
    SavePanel.add(Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 50));

    EditPanel.add(SavePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 530, 100, 50));

    DeletePanel.setBackground(new java.awt.Color(0, 129, 211));

    Delete.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    Delete.setForeground(new java.awt.Color(255, 255, 255));
    Delete.setText("Delete ");
    Delete.setBorderPainted(false);
    Delete.setContentAreaFilled(false);
    Delete.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        DeleteMouseMoved(evt);
      }
    });
    Delete.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        DeleteMouseExited(evt);
      }
    });
    Delete.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        DeleteActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout DeletePanelLayout = new javax.swing.GroupLayout(DeletePanel);
    DeletePanel.setLayout(DeletePanelLayout);
    DeletePanelLayout.setHorizontalGroup(
      DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
    );
    DeletePanelLayout.setVerticalGroup(
      DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DeletePanelLayout.createSequentialGroup()
        .addGap(0, 3, Short.MAX_VALUE)
        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    EditPanel.add(DeletePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 530, -1, 50));

    ClearPanel.setBackground(new java.awt.Color(0, 129, 211));

    clear.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    clear.setForeground(new java.awt.Color(255, 255, 255));
    clear.setText("Clear");
    clear.setBorderPainted(false);
    clear.setContentAreaFilled(false);
    clear.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        clearMouseMoved(evt);
      }
    });
    clear.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        clearMouseExited(evt);
      }
    });
    clear.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        clearActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout ClearPanelLayout = new javax.swing.GroupLayout(ClearPanel);
    ClearPanel.setLayout(ClearPanelLayout);
    ClearPanelLayout.setHorizontalGroup(
      ClearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
    );
    ClearPanelLayout.setVerticalGroup(
      ClearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
    );

    EditPanel.add(ClearPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 530, -1, 50));

    add(EditPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 140, 650, 770));

    no_of_rows.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
    no_of_rows.setForeground(new java.awt.Color(135, 135, 135));
    no_of_rows.setText("no of rows");
    add(no_of_rows, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 860, 220, 20));

    jLabel8.setBackground(new java.awt.Color(231, 78, 123));
    jLabel8.setFont(new java.awt.Font("VIP Rawy Regular", 0, 36)); // NOI18N
    jLabel8.setForeground(new java.awt.Color(231, 78, 123));
    jLabel8.setText("Building");
    add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 70, 240, 70));
    add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 130, 600, 20));

    searchPanel.setBackground(new java.awt.Color(0, 129, 211));

    search.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    search.setForeground(new java.awt.Color(255, 255, 255));
    search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fym/lta/Images/icons8_search_26px.png"))); // NOI18N
    search.setBorderPainted(false);
    search.setContentAreaFilled(false);
    search.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        searchMouseMoved(evt);
      }
    });
    search.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        searchMouseExited(evt);
      }
    });
    search.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        searchActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
    searchPanel.setLayout(searchPanelLayout);
    searchPanelLayout.setHorizontalGroup(
      searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
    );
    searchPanelLayout.setVerticalGroup(
      searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    add(searchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 70, 50));

    RefreshPanel.setBackground(new java.awt.Color(0, 129, 211));

    Refresh.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    Refresh.setForeground(new java.awt.Color(255, 255, 255));
    Refresh.setText("Refresh");
    Refresh.setBorderPainted(false);
    Refresh.setContentAreaFilled(false);
    Refresh.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        RefreshMouseMoved(evt);
      }
    });
    Refresh.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        RefreshMouseExited(evt);
      }
    });
    Refresh.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        RefreshActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout RefreshPanelLayout = new javax.swing.GroupLayout(RefreshPanel);
    RefreshPanel.setLayout(RefreshPanelLayout);
    RefreshPanelLayout.setHorizontalGroup(
      RefreshPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Refresh, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
    );
    RefreshPanelLayout.setVerticalGroup(
      RefreshPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RefreshPanelLayout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    add(RefreshPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 870, 120, 50));
  }//GEN-END:initComponents

    private void IdTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusGained
        // TODO add your handling code here:
        if(IdText.getText().equalsIgnoreCase("Enter Building ID")){
            IdText.setText("");
        }

    IdText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_IdTextFocusGained

    private void IdTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusLost
        // TODO add your handling code here:
        if(IdText.getText().trim().equalsIgnoreCase("")){
            IdText.setText("Enter Building ID");
        }

    IdText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_IdTextFocusLost

    private void CodeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodeTextFocusGained
        // TODO add your handling code here:
        if(CodeText.getText().equalsIgnoreCase("Enter Building code")){
            CodeText.setText("");}

    CodeText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_CodeTextFocusGained

    private void CodeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodeTextFocusLost
        // TODO add your handling code here:
        if(CodeText.getText().trim().equalsIgnoreCase("")){
            CodeText.setText("Enter Building code");}

    CodeText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_CodeTextFocusLost

    private void DesTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DesTextFocusGained
        // TODO add your handling code here:
        if(DesText.getText().equalsIgnoreCase("Enter Building Description")){
            DesText.setText("");}

    DesText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_DesTextFocusGained

    private void DesTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DesTextFocusLost
        // TODO add your handling code here:
        if(DesText.getText().trim().equalsIgnoreCase("")){
            DesText.setText("Enter Building Description");   }

    DesText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_DesTextFocusLost

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
      
      if(Save.getText().equalsIgnoreCase("Update"))
        update();
      
      else {
        try{
          
            if(checkValidity()){  //if entered data is valid
              
            BuildingDto building = new BuildingDto();  // dto object
            BuildingBao bao = new BaoFactory().createBuildingBao(); //bao object
           
            building.setCode(CodeText.getText());  //get code
            building.setId(Integer.parseInt(IdText.getText()));  //get id
            building.setDescription(DesText.getText()); //get description
            
            if(bao.insert(building,user)){ 
                JOptionPane.showMessageDialog(this, "Building inserted Successfully","Done",1);
                setTableModel(bao.ListAll()); //refresh table
                BuildTable.repaint();
                IdText.setEnabled(false);
                Save.setText("Update");
            }
            else{
              
              int reply =
                JOptionPane.showConfirmDialog(null,
                "This Building is already exist!\n\n"+
                "Do you want to update it?", "Warning",
                JOptionPane.YES_NO_OPTION);

              //update object if user choose yes
              if(reply==JOptionPane.YES_OPTION)
                {
                    update();
                    Save.setText("Update");
                    IdText.setEnabled(false);
                }
            }}
             
        }catch(Exception e){
            e.printStackTrace();
        }}
    }//GEN-LAST:event_SaveActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
    //Show confirm message
    int reply =
      JOptionPane.showConfirmDialog(null,
      "Are you sure to delete this building?\n"+
      "All things depend on it will be deleted!", "Warning",
      JOptionPane.YES_NO_OPTION);

    //delete object if user choose yes
    if(reply==JOptionPane.YES_OPTION)
      {

        try
          {
            BuildingDto dto = new BuildingDto();
            BuildingBao bao = new BaoFactory().createBuildingBao();

            dto.setId(Integer.parseInt(IdText.getText()));

            //go to business layer
            boolean flag = bao.delete(dto);

            /*if object has deleted successfully
                 * show message to tell user this
                 * repait the table
                 * make id text box enabled
                 * */
            if(flag==true)
              {
                JOptionPane.showMessageDialog(null,
                  "Building deleted successfully!", "Done", 1);

                //refresh table
                setTableModel(bao.ListAll());
                BuildTable.repaint();
                IdText.setEnabled(true); //set id tect enabled again
                Save.setText("Save"); //convert save button to update

              }

            //else show message to tell user that this object does't exist in database
            else
              JOptionPane.showMessageDialog(null,
                "Building doesn't exist!", "Not Found",
                JOptionPane.ERROR_MESSAGE);
          }
        catch(Exception e)
          {
            // TODO: Add catch code
            e.printStackTrace();
            //for non expected error
            JOptionPane.showMessageDialog(null,
              "Some Thing went wrong!\nPlease check your entered data. ",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);

          }
      }
    }//GEN-LAST:event_DeleteActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        try{
            BuildingDao bao;
            bao = new DaoFactory().createBuildingDao();
            setTableModel(bao.viewAll());
            BuildTable.repaint();
        //enable text boxes again
        IdText.setEnabled(true);
        Save.setText("Save");

        //set default text for text boxes
        IdText.setText("Enter Building ID");
        CodeText.setText("Enter Building code");
        DesText.setText("Enter Building Description");
          
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void SearchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchTextFocusGained
        // TODO add your handling code here:
        if(SearchText.getText().equalsIgnoreCase("What do you want to search ?")){
            SearchText.setText("");}

    SearchText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_SearchTextFocusGained

    private void SearchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchTextFocusLost
        // TODO add your handling code here:
        if(SearchText.getText().trim().equalsIgnoreCase("")){
            SearchText.setText("What do you want to search ?");}

    SearchText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_SearchTextFocusLost
// Search Button
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        try{

        // Check if the Search field is empty
        if(SearchText.getText().equalsIgnoreCase("What do you want to search ?"))
          {
            //Show message tell user that Search Field is empty
            JOptionPane.showMessageDialog(null, "Search field is empty",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);
            //throw exception
            throw new IllegalArgumentException("Search field is empty");
          }
          
            BuildingDto building = new BuildingDto(); //create dto object
            List<BuildingDto> buildings = null;  //create building dto list to put search result in it
          
            BuildingBao bao = new BaoFactory().createBuildingBao();  //bao object
            building.setSearch(SearchText.getText());  //get search text
          
            buildings = bao.searchFor(building);  //get search result

            if(buildings!=null){  //if there is result
                // show result set in table
                setTableModel(buildings);
                BuildTable.repaint();
            }else{ //if there is no search result
            JOptionPane.showMessageDialog(null,
              "There is no search result for: "+SearchText.getText(),
              "Invalid search", 1);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchActionPerformed

  private void CodeTextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CodeTextActionPerformed
  {//GEN-HEADEREND:event_CodeTextActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_CodeTextActionPerformed

  private void clearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearActionPerformed
  {//GEN-HEADEREND:event_clearActionPerformed
    // TODO add your handling code here:

    //enable text boxes again
    IdText.setEnabled(true);
    Save.setText("Save"); 

    //set default text for text boxes
    IdText.setText("Enter Building ID");
    CodeText.setText("Enter Building code");
    DesText.setText("Enter Building Description");
    
  }//GEN-LAST:event_clearActionPerformed

  private void BuildTableKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_BuildTableKeyPressed
  {//GEN-HEADEREND:event_BuildTableKeyPressed
    int i = BuildTable.getSelectedRow();

    //Because "BuildTable.getSelectedRow()" doesn't give the correct selected row
    if(evt.getExtendedKeyCode()==KeyEvent.VK_UP)
      i--; //for up key decrement
    else if(evt.getExtendedKeyCode()==KeyEvent.VK_DOWN)
      i++; // for down key increment
    try
      {
      
        //move up and down in table to get data into edit space
        if(evt.getExtendedKeyCode()==KeyEvent.VK_UP||
          evt.getExtendedKeyCode()==KeyEvent.VK_DOWN)
          {
            IdText.setEnabled(false);
            Save.setText("Update");
            // set the attributes of selected row to text boxes
            IdText.setText(BuildTable.getValueAt(i, 0).toString());
            CodeText.setText(BuildTable.getValueAt(i, 1).toString());
            DesText.setText(BuildTable.getValueAt(i, 2).toString());
            
          }
      }

    catch(java.lang.ArrayIndexOutOfBoundsException e)
      {
        e.printStackTrace();
      }


    //delete selected object when press delete
    if(evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
      {

        try
          {

            //For one selected row in table
            if(BuildTable.getSelectedRowCount()==1)
              {


                //Show confirm message
                int reply =
                  JOptionPane.showConfirmDialog(null,
                    "Are you sure to delete this building?\n"+
                    "All things depend on it will be deleted!", "Warning",
                    JOptionPane.YES_NO_OPTION);


                //delete object if user choose yes
                if(reply==JOptionPane.YES_OPTION)
                  {
                    BuildingDto building =
                      new BuildingDto(); //create dto building object
                    BuildingBao bao =
                      new BaoFactory().createBuildingBao(); //create object building bao

                    //get selected building id from table
                    int s =
                      Integer.parseInt(BuildTable.getValueAt(BuildTable.getSelectedRow(),
                          0).toString());
                    building.setId(s); //set it to building object

                    //delete it using bao delete method
                    if(bao.delete(building)) //if it deleted sucessfilly show message to tell user that
                      {
                        JOptionPane.showMessageDialog(this,
                          "Building Deleted Successfully");
                        setTableModel(bao.ListAll());
                        BuildTable.repaint();
                        IdText.setEnabled(true);
                        Save.setText("Save");
                      }

                    else
                      //if bao method return false (location type not be deleted)
                      JOptionPane.showMessageDialog(this,
                        "Can't delete object", "Error",
                        JOptionPane.ERROR_MESSAGE);
                  }

              }
            else if(BuildTable.getSelectedRowCount()==0)
              {
                // if there is no selected row show message to ask user to select a row
                JOptionPane.showMessageDialog(this,
                  "There is no selected row in the table\n\n", "Error",
                  JOptionPane.WARNING_MESSAGE);
              }
            else
              {
                // if there are more than one row selected show message to ask user to select one row
                JOptionPane.showMessageDialog(this,
                  "Please, Select only one row\n\n", "Error",
                  JOptionPane.WARNING_MESSAGE);
              }
          }
        catch(Exception e)
          {
            e.printStackTrace();
          }

      }
  }//GEN-LAST:event_BuildTableKeyPressed

  private void SearchTextKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_SearchTextKeyPressed
  {//GEN-HEADEREND:event_SearchTextKeyPressed
    if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {

        try
        {
            // Check if the Search field is empty
            if(SearchText.getText().equalsIgnoreCase(""))
              {
                //Show message tell user that Search Field is empty
                JOptionPane.showMessageDialog(null, "Search field is empty",
                  "Invalid Input", JOptionPane.ERROR_MESSAGE);
                //throw exception
                throw new IllegalArgumentException("Search field is empty");
              }

            BuildingDto building = new BuildingDto(); //create dto object
            List<BuildingDto> buildings =
              null; //create building dto list to put search result in it

            BuildingBao bao =
              new BaoFactory().createBuildingBao(); //bao object
            building.setSearch(SearchText.getText()); //get search text

            buildings = bao.searchFor(building); //get search result

            if(buildings!=null)
              { //if there is result
                // show result set in table
                setTableModel(buildings);
                BuildTable.repaint();
              }
            else
              { //if there is no search result
                JOptionPane.showMessageDialog(null,
                  "There is no search result for: "+SearchText.getText(),
                  "Invalid search", 1);
              }
            
          }
        catch(Exception e)
          {
            e.printStackTrace();
          }
    }
  }//GEN-LAST:event_SearchTextKeyPressed

  private void BuildTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_BuildTableMouseClicked
  {//GEN-HEADEREND:event_BuildTableMouseClicked
    // set the attributes of selected row to text boxes
    IdText.setEnabled(false);
    Save.setText("Update");
    int i = BuildTable.getSelectedRow();
    IdText.setText(BuildTable.getValueAt(i, 0).toString());
    CodeText.setText(BuildTable.getValueAt(i, 1).toString());
    DesText.setText(BuildTable.getValueAt(i, 2).toString());
  }//GEN-LAST:event_BuildTableMouseClicked

  private void searchMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchMouseMoved
  {//GEN-HEADEREND:event_searchMouseMoved
    // TODO add your handling code here:
    searchPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_searchMouseMoved

  private void clearMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clearMouseMoved
  {//GEN-HEADEREND:event_clearMouseMoved
    // TODO add your handling code here:
    ClearPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_clearMouseMoved

  private void DeleteMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_DeleteMouseMoved
  {//GEN-HEADEREND:event_DeleteMouseMoved
    // TODO add your handling code here:
    DeletePanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_DeleteMouseMoved

  private void SaveMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_SaveMouseMoved
  {//GEN-HEADEREND:event_SaveMouseMoved
    // TODO add your handling code here:
    SavePanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_SaveMouseMoved

  private void RefreshMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_RefreshMouseMoved
  {//GEN-HEADEREND:event_RefreshMouseMoved
    // TODO add your handling code here:
    RefreshPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_RefreshMouseMoved

  private void RefreshMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_RefreshMouseExited
  {//GEN-HEADEREND:event_RefreshMouseExited
    // TODO add your handling code here:
    RefreshPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_RefreshMouseExited

  private void searchMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchMouseExited
  {//GEN-HEADEREND:event_searchMouseExited
    // TODO add your handling code here:
    searchPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_searchMouseExited

  private void clearMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clearMouseExited
  {//GEN-HEADEREND:event_clearMouseExited
    // TODO add your handling code here:
    ClearPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_clearMouseExited

  private void DeleteMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_DeleteMouseExited
  {//GEN-HEADEREND:event_DeleteMouseExited
    // TODO add your handling code here:
    DeletePanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_DeleteMouseExited

  private void SaveMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_SaveMouseExited
  {//GEN-HEADEREND:event_SaveMouseExited
    // TODO add your handling code here:
    SavePanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_SaveMouseExited
    
    //not used
    private boolean checkValidity(){

    try
      {

        //check for empty entered data
        if(IdText.getText().equalsIgnoreCase("Enter Building ID"))
          {
            JOptionPane.showMessageDialog(null,
              "Please, enter building id", "Invalid Input",
              JOptionPane.ERROR_MESSAGE);
            throw new IllegalArgumentException("id text is empry");
          }

        else if(CodeText.getText().equalsIgnoreCase("Enter Building code"))

          {
            JOptionPane.showMessageDialog(null,
              "Please, enter building code", "Invalid Input",
              JOptionPane.ERROR_MESSAGE);
            throw new IllegalArgumentException("code text is empty");
          }

        else if(DesText.getText().equalsIgnoreCase("Enter Building Description"))
          {
            JOptionPane.showMessageDialog(null,
              "Please, enter building description", "Invalid Input",
              JOptionPane.ERROR_MESSAGE);
            throw new IllegalArgumentException("description text is empty");
          }

        //Check for the entered id is a positive number
        int id = Integer.parseInt(IdText.getText());
        if(id<1)
          {
            JOptionPane.showMessageDialog(null,
              "Invalid Id \n\n(ID is only Positive Numbers)",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);
            throw new IllegalArgumentException("ID is only Positive Numbers");
          }

        //check validity of code

        //code can't start with number or symbol
        if(!Character.isAlphabetic(CodeText.getText().charAt(0)))
          {
            JOptionPane.showMessageDialog(null,
              "Invalid code format\n\n(code can't start with number or symbol)",
              "Invalid Input", JOptionPane.ERROR_MESSAGE);
            throw new IllegalArgumentException("code can't start with number or symbol");

          }

        //check for all chars
        for(int i = 1; i<CodeText.getText().length(); i++)
          {

            //code contain only letters/numbers ane '_'
            if(!Character.isLetterOrDigit(CodeText.getText().charAt(i))&&
              CodeText.getText().charAt(i)!='_')
              {
                JOptionPane.showMessageDialog(null,
                  "Invalid code format\n\n(code can only be a sequence of Unicode letters and digits separated by underscore)",
                  "Invalid Input", JOptionPane.ERROR_MESSAGE);
                throw new IllegalArgumentException("code can't contain stranger symbols");

              }
          }



        return true; //all data correct

      }
    catch(java.lang.NumberFormatException e2) //occur when id isn't a number
      {
        e2.printStackTrace();
        JOptionPane.showMessageDialog(null, "Please enter number for ID",
          "Invalid Input", JOptionPane.ERROR_MESSAGE);

      }

    //occur when color is out of bounds (hexa chars)
    catch(java.lang.ArrayIndexOutOfBoundsException e3)
      {

        e3.printStackTrace();
        JOptionPane.showMessageDialog(null, "Invalid color code",
          "Invalid Input", JOptionPane.ERROR_MESSAGE);
        return false;

      }
    catch(IllegalArgumentException e1)
      {

        e1.printStackTrace();
        return false;
      }

    catch(Exception e)
      {
        // TODO: Add catch code
        e.printStackTrace();

        //if there is any other non expecting error
        JOptionPane.showMessageDialog(null,
          "Some Thing went wrong!\n\nPlease check your entered data. ",
          "Invalid Input", JOptionPane.ERROR_MESSAGE);
        return false;
      }

    return false;}


  /*  public BuildingJPanel(UserDto userr) {
        try{
            this.user = userr;
            initComponents();
            BuildingDao build;
            build = new DaoFactory().createBuildingDao();
            setTableModel(build.viewAll());  
        }catch (Exception e) {
                    // TODO: Add catch code
                    e.printStackTrace();
                }
    }*/
    
    


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTable BuildTable;
  private javax.swing.JPanel ClearPanel;
  private javax.swing.JLabel CodeLabel;
  private javax.swing.JTextField CodeText;
  private javax.swing.JButton Delete;
  private javax.swing.JPanel DeletePanel;
  private javax.swing.JTextField DesText;
  private javax.swing.JPanel EditPanel;
  private javax.swing.JLabel IdLabel;
  private javax.swing.JTextField IdText;
  private javax.swing.JLabel NameLabel;
  private javax.swing.JButton Refresh;
  private javax.swing.JPanel RefreshPanel;
  private javax.swing.JButton Save;
  private javax.swing.JPanel SavePanel;
  private javax.swing.JTextField SearchText;
  private javax.swing.JButton clear;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSeparator jSeparator1;
  private java.awt.Label no_of_rows;
  private javax.swing.JButton search;
  private javax.swing.JPanel searchPanel;
  // End of variables declaration//GEN-END:variables

}
