package com.fym.lta.UI;

import javax.swing.JOptionPane;
import com.fym.lta.BAO.BaoFactory;
import com.fym.lta.BAO.EquipmentBao;
import com.fym.lta.DAO.DaoFactory;
import com.fym.lta.DAO.EquipmentDao;
import com.fym.lta.DAO.EquipmentDaoImpl;
import com.fym.lta.DAO.EquipmentTypeDao;
import com.fym.lta.DTO.EquipTypeSpecDetailsDto;
import com.fym.lta.DTO.EquipmentDto;
import com.fym.lta.DTO.EquipmentTypeDto;

import java.awt.EventQueue;

import java.awt.event.KeyEvent;

import java.util.List;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Nada El-Gammal
 */
public class Equipment_panel extends java.awt.Panel {
    private EquipmentBao business;

    /** Creates new form Equipment_panel */    
    public Equipment_panel() {
        try {
                   business = new BaoFactory().createEquipmnetBao();
                   EquipmentDao dao = new DaoFactory().createEquipmentDao();

                   initComponents();
                   setTableModel(dao.viewAll());            
                   
               } catch (Exception e) {
                   e.printStackTrace();
               }
    }
    
    private void setTableModel(List<EquipmentDto> equips){
            int size = 0;
            if(equips != null && !equips.isEmpty())
                size = equips.size();
            
            Object [][] equipsArr = new Object [size][4];
            for(int i =0;i<size;i++){
                equipsArr[i][0] = equips.get(i).getId();
                equipsArr[i][1] = equips.get(i).getCode();
                equipsArr[i][2] = equips.get(i).getType().getId();
                equipsArr[i][3] = equips.get(i).getCountry();

            }
            EquipmentTable.setModel(new javax.swing.table.DefaultTableModel(equipsArr,
                new String [] {
                    "Id", "Code", "Type ID" , "Country"
                }
            ));    
        }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        EquipmentTable = new javax.swing.JTable();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        NewButton = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();
        IDTextField = new javax.swing.JTextField();
        codeLabel = new javax.swing.JLabel();
        codeTextField = new javax.swing.JTextField();
        typeIdLabel = new javax.swing.JLabel();
        typeIdTextField = new javax.swing.JTextField();
        countryLabel = new javax.swing.JLabel();
        countryTextField = new javax.swing.JTextField();

        searchTextField.setText("Enter text to search");
        searchTextField.setPreferredSize(new java.awt.Dimension(74, 19));
        searchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusLost(evt);
            }
        });
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        EquipmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Code", "Type ID", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EquipmentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EquipmentTableMouseClicked(evt);
            }
        });
        EquipmentTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EquipmentTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(EquipmentTable);
        if (EquipmentTable.getColumnModel().getColumnCount() > 0) {
            EquipmentTable.getColumnModel().getColumn(0).setHeaderValue("ID");
            EquipmentTable.getColumnModel().getColumn(1).setHeaderValue("Code");
            EquipmentTable.getColumnModel().getColumn(2).setHeaderValue("Type ID");
            EquipmentTable.getColumnModel().getColumn(3).setHeaderValue("Country");
        }

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        NewButton.setText("New");
        NewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewButtonActionPerformed(evt);
            }
        });

        idLabel.setText("ID:");

        IDTextField.setText("Enter ID");
        IDTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IDTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IDTextFieldFocusLost(evt);
            }
        });
        IDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDTextFieldActionPerformed(evt);
            }
        });

        codeLabel.setText("Code:");

        codeTextField.setText("Enter Code");
        codeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                codeTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                codeTextFieldFocusLost(evt);
            }
        });
        codeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTextFieldActionPerformed(evt);
            }
        });

        typeIdLabel.setText("Type ID:");

        typeIdTextField.setText("Enter ID of the equipment type");
        typeIdTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                typeIdTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                typeIdTextFieldFocusLost(evt);
            }
        });
        typeIdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeIdTextFieldActionPerformed(evt);
            }
        });

        countryLabel.setText("Country:");

        countryTextField.setText("Enter made country of the equipment");
        countryTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                countryTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                countryTextFieldFocusLost(evt);
            }
        });
        countryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel)
                            .addComponent(codeLabel)
                            .addComponent(typeIdLabel)
                            .addComponent(countryLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IDTextField)
                            .addComponent(codeTextField)
                            .addComponent(typeIdTextField)
                            .addComponent(countryTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeLabel)
                    .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeIdLabel)
                    .addComponent(typeIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryLabel)
                    .addComponent(countryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(saveButton)
                    .addComponent(DeleteButton)
                    .addComponent(NewButton))
                .addGap(15, 15, 15))
        );
    }//GEN-END:initComponents
   
    EquipmentDto eq = new EquipmentDto();

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed

    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try
        {
            if(checkValidity()){
            EquipmentDao e = new DaoFactory().createEquipmentDao();
            int row = EquipmentTable.getSelectedRow();
            eq.setId(Integer.parseInt(IDTextField.getText()));
            eq.setCode(codeTextField.getText());
            eq.setType(new EquipmentTypeDto(Integer.parseInt(typeIdTextField.getText())));
            eq.setCountry(countryTextField.getText());
            if(business.update(eq)){
                       JOptionPane.showMessageDialog(this, "Equipment Updated Successfully");
                       setTableModel(e.viewAll());            
                       EquipmentTable.repaint();
            }else{
                   EquipmentTable.repaint();
               }
            }
            codeTextField.setText("Enter Code");
            typeIdTextField.setText("Enter ID of the equipment type");
            countryTextField.setText("Enter made country of the equipment");
            IDTextField.setText("Enter ID");
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        try{
             EquipmentDao e = new DaoFactory().createEquipmentDao();
             int row = EquipmentTable.getSelectedRow();
             eq.setId(Integer.parseInt(EquipmentTable.getModel().getValueAt(row,0).toString()));
             eq.setCode(EquipmentTable.getModel().getValueAt(row,1).toString());
             eq.setType(new EquipmentTypeDto(null,0,null,Integer.parseInt(EquipmentTable.getModel().getValueAt(row,2).toString()),null,null));
             eq.setCountry(EquipmentTable.getModel().getValueAt(row,3).toString());
             if(business.delete(eq)){
                        JOptionPane.showMessageDialog(this, "Equipment Deleted Successfully");
                        setTableModel(e.viewAll());            
                        EquipmentTable.repaint();
             }else{
                    EquipmentTable.repaint();
                }
            }
        catch(Exception e){
                e.printStackTrace();
            }
        
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void IDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDTextFieldActionPerformed

    private void codeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeTextFieldActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        try{
                EquipmentDao e = new DaoFactory().createEquipmentDao();
                setTableModel(e.viewAll());            
                EquipmentTable.repaint();
            }
        catch(Exception e)
        { e.printStackTrace();}
        
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void NewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewButtonActionPerformed
        try{ 
            if(checkValidity()){
            EquipmentDao e = new DaoFactory().createEquipmentDao();
            EquipmentTypeDto et = new EquipmentTypeDto(Integer.parseInt(typeIdTextField.getText()));
            EquipmentTypeDao typedao = new DaoFactory().createEquipmentTypeDao();
        eq.setId(Integer.parseInt(IDTextField.getText()));
        eq.setCode(codeTextField.getText());
        eq.setCountry(countryTextField.getText());
        eq.setType(new EquipmentTypeDto(Integer.parseInt(typeIdTextField.getText())));        
        if (typedao.isExist(et)){
        if(business.insert(eq)){
                        JOptionPane.showMessageDialog(this, "Equipment Inserted Successfully");
                        setTableModel(e.viewAll());            
                        EquipmentTable.repaint();
                    }else 
            EquipmentTable.repaint(); 
        }
            else{
                JOptionPane.showMessageDialog(this,"Type of this Equipment does not Exist\n Please create the Type First"); }
            }
            codeTextField.setText("Enter Code");
            typeIdTextField.setText("Enter ID of the equipment type");
            countryTextField.setText("Enter made country of the equipment");
            IDTextField.setText("Enter ID");
        }
        catch(Exception e){
                e.printStackTrace();
            }
    }//GEN-LAST:event_NewButtonActionPerformed

    private void typeIdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeIdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeIdTextFieldActionPerformed

    private void IDTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDTextFieldFocusGained
        if (IDTextField.getText().equalsIgnoreCase("Enter ID"))
            IDTextField.setText("");        
    }//GEN-LAST:event_IDTextFieldFocusGained

    private void codeTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codeTextFieldFocusLost
    if (codeTextField.getText().trim().equalsIgnoreCase(""))
        codeTextField.setText("Enter Code");
    }//GEN-LAST:event_codeTextFieldFocusLost

    private void IDTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDTextFieldFocusLost
    if (IDTextField.getText().trim().equalsIgnoreCase(""))
        IDTextField.setText("Enter ID");    
    }//GEN-LAST:event_IDTextFieldFocusLost

    private void codeTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codeTextFieldFocusGained
        if (codeTextField.getText().equalsIgnoreCase("Enter Code"))
            codeTextField.setText("");
    }//GEN-LAST:event_codeTextFieldFocusGained

    private void typeIdTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeIdTextFieldFocusGained
        if(typeIdTextField.getText().equalsIgnoreCase("Enter ID of the equipment type") )
            typeIdTextField.setText("");
    }//GEN-LAST:event_typeIdTextFieldFocusGained

    private void typeIdTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeIdTextFieldFocusLost
    if(typeIdTextField.getText().trim().equalsIgnoreCase(""))
        typeIdTextField.setText("Enter ID of the equipment type");
    }//GEN-LAST:event_typeIdTextFieldFocusLost

    private void countryTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryTextFieldFocusGained
        if( countryTextField.getText().equalsIgnoreCase("Enter made country of the equipment") ) 
            countryTextField.setText("");
    }//GEN-LAST:event_countryTextFieldFocusGained

    private void countryTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryTextFieldFocusLost
    if( countryTextField.getText().trim().equalsIgnoreCase(""))
        countryTextField.setText("Enter made country of the equipment");
    }//GEN-LAST:event_countryTextFieldFocusLost

    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
    if(searchTextField.getText().equalsIgnoreCase("Enter text to search")){
        searchTextField.setText("");
    }
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
    if(searchTextField.getText().trim().equalsIgnoreCase("")){
        searchTextField.setText("Enter text to search");
    }
    }//GEN-LAST:event_searchTextFieldFocusLost

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try{
            EquipmentDao e = new DaoFactory().createEquipmentDao();
            EquipmentBao equip = new BaoFactory().createEquipmnetBao();
                List<EquipmentDto> search_list = null;
            eq.setSearch(searchTextField.getText());
                search_list = equip.searchFor(eq);
            if( search_list !=null )
            {
                JOptionPane.showMessageDialog(this, "Equipmnet Found");
                setTableModel(search_list);  
                EquipmentTable.repaint();
            }
            else 
            {  
                setTableModel(e.viewAll());  
                EquipmentTable.repaint();
            }
            searchTextField.setText("Enter text to search");  
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void countryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryTextFieldActionPerformed

    private void EquipmentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EquipmentTableMouseClicked
        int row = EquipmentTable.getSelectedRow();
        IDTextField.setText(EquipmentTable.getValueAt(row, 0).toString());
        codeTextField.setText(EquipmentTable.getValueAt(row, 1).toString());
        typeIdTextField.setText(EquipmentTable.getValueAt(row, 2).toString());
        countryTextField.setText(EquipmentTable.getValueAt(row, 3).toString());
    }//GEN-LAST:event_EquipmentTableMouseClicked

    private void EquipmentTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EquipmentTableKeyPressed
        if( evt.getExtendedKeyCode()==KeyEvent.VK_UP || evt.getExtendedKeyCode()==KeyEvent.VK_DOWN ){
            int row = EquipmentTable.getSelectedRow();
            IDTextField.setText(EquipmentTable.getValueAt(row, 0).toString());
            codeTextField.setText(EquipmentTable.getValueAt(row, 1).toString());
            typeIdTextField.setText(EquipmentTable.getValueAt(row, 2).toString());
            countryTextField.setText(EquipmentTable.getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_EquipmentTableKeyPressed

    private boolean checkValidity(){
            try{
                if(IDTextField.getText().equalsIgnoreCase("Enter ID")){
                    JOptionPane.showMessageDialog(this, "Please, enter id number","",JOptionPane.ERROR_MESSAGE);
                    return false;            
                }
                Integer.parseInt(IDTextField.getText());
               // return true;
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "ID is invalid! \n (please enter a number)");
                         // own implemented dialog
                return false;
            }
            
            try{
                if(typeIdTextField.getText().equalsIgnoreCase("Enter ID of the equipment type")){
                    JOptionPane.showMessageDialog(this, "Please, enter id number","",JOptionPane.ERROR_MESSAGE);
                    return false;            
                }
                Integer.parseInt(typeIdTextField.getText());
               // return true;
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "ID is invalid! \n (please enter a number)");
                         // own implemented dialog
                return false;
            }
            
            try{
                if(codeTextField.getText().equalsIgnoreCase("Enter Code")){
                    JOptionPane.showMessageDialog(this, "Please, enter code");
                    return false;
                }
                    Integer.parseInt(codeTextField.getText());
                    JOptionPane.showMessageDialog(this, "Code is invalid! \n (please enter a string)");
                    return false;
                }catch (NumberFormatException e){
                             // own implemented dialog
                    
            try{
                if(countryTextField.getText().equalsIgnoreCase("Enter made country of the equipment")){
                    JOptionPane.showMessageDialog(this, "Please, enter string");
                    return false;
                }
                    Integer.parseInt(countryTextField.getText());
                    JOptionPane.showMessageDialog(this, "String is invalid! \n (please enter a string)");
                    return false;
                }catch (NumberFormatException es){
                             // own implemented dialog
                  //  return true;
            return true;
            }}
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTable EquipmentTable;
    private javax.swing.JTextField IDTextField;
    private javax.swing.JButton NewButton;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JTextField codeTextField;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JTextField countryTextField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel typeIdLabel;
    private javax.swing.JTextField typeIdTextField;
    // End of variables declaration//GEN-END:variables

}
