package com.fym.lta.UI;

/**
 *
 * @author Nada El-Gammal
 */


import com.fym.lta.BAO.BaoFactory;
import com.fym.lta.BAO.EquipmentTypeBao;
import com.fym.lta.DAO.DaoFactory;
import com.fym.lta.DAO.EqTypeSpecDao;
import com.fym.lta.DAO.EquipmentDao;
import com.fym.lta.DAO.EquipmentTypeDao;
import com.fym.lta.DTO.EquipSpecificationDto;
import com.fym.lta.DTO.EquipmentDto;

import com.fym.lta.DTO.EquipmentTypeDto;

import java.awt.CardLayout;
import java.awt.event.KeyEvent;

import java.util.List;

import javax.swing.JOptionPane;

/**
 *
 * @author Nada El-Gammal
 */
public class EquipmentTypePanel extends java.awt.Panel {
    
    private static final long serialVersionUID = 1L;

    private EquipmentTypeBao business;

    /** Creates new form EquipmentTypePanel */
    public EquipmentTypePanel() {
        try {
                   business = new BaoFactory().createEquipmentTypeBao();
                   EquipmentTypeDao dao = new DaoFactory().createEquipmentTypeDao();
                   initComponents();
                   setTableModel(dao.viewAll());            
                   
               } catch (Exception e) {
                   e.printStackTrace();
               }    }
    
    private void setTableModel(List<EquipmentTypeDto> equipt){
            int size = 0;
            if(equipt != null && !equipt.isEmpty())
                size = equipt.size();
            
            Object [][] equipsArr = new Object [size][4];
            for(int i =0;i<size;i++){
                equipsArr[i][0] = equipt.get(i).getId();
                equipsArr[i][1] = equipt.get(i).getCode();
                equipsArr[i][2] = equipt.get(i).getName();
                equipsArr[i][3] = equipt.get(i).getNo_of_equip();

            }
            EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(equipsArr,
                new String [] {
                    "Id", "Code", "Name" , "No. Of Equips"
                }
            ));    
        }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        EqTypeTable = new javax.swing.JTable();
        codeLabel = new javax.swing.JLabel();
        codeTextField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        IDTextField = new javax.swing.JTextField();
        codeLabel1 = new javax.swing.JLabel();
        noOfEquipTextField1 = new javax.swing.JTextField();
        codeLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        NewButton = new javax.swing.JButton();
        listEquipmentsButton1 = new javax.swing.JButton();
        viewSpecButton = new javax.swing.JButton();
        setSpecButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchTextField.setText("Enter text to search");
        searchTextField.setPreferredSize(new java.awt.Dimension(74, 19));
        searchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusLost(evt);
            }
        });
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        add(searchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 12, 453, 26));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 14, 71, -1));

        EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Code", "Name", "No. Of Equips"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EqTypeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EqTypeTableMouseClicked(evt);
            }
        });
        EqTypeTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EqTypeTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(EqTypeTable);
        if (EqTypeTable.getColumnModel().getColumnCount() > 0) {
            EqTypeTable.getColumnModel().getColumn(0).setHeaderValue("ID");
            EqTypeTable.getColumnModel().getColumn(1).setHeaderValue("Code");
            EqTypeTable.getColumnModel().getColumn(2).setHeaderValue("Name");
            EqTypeTable.getColumnModel().getColumn(3).setHeaderValue("No. Of Equips");
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 53, 620, 163));

        codeLabel.setText("ID:");
        add(codeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 248, -1, -1));

        codeTextField.setText("Enter Code");
        codeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                codeTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                codeTextFieldFocusLost(evt);
            }
        });
        codeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTextFieldActionPerformed(evt);
            }
        });
        add(codeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 277, 472, -1));

        idLabel.setText("No. Of Equipments:");
        add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 330, -1, 20));

        IDTextField.setText("Enter ID");
        IDTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                IDTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                IDTextFieldFocusLost(evt);
            }
        });
        IDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDTextFieldActionPerformed(evt);
            }
        });
        add(IDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 246, 472, -1));

        codeLabel1.setText("Code:");
        add(codeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 279, -1, -1));

        noOfEquipTextField1.setText("Enter Number of Equipments");
        noOfEquipTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                noOfEquipTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                noOfEquipTextField1FocusLost(evt);
            }
        });
        noOfEquipTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfEquipTextField1ActionPerformed(evt);
            }
        });
        add(noOfEquipTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 331, 472, -1));

        codeLabel2.setText("Name:");
        add(codeLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 307, -1, -1));

        nameTextField.setText("Enter Name");
        nameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameTextFieldFocusLost(evt);
            }
        });
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 305, 472, -1));

        saveButton.setText("Update");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, 77, -1));

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 450, 72, -1));

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        add(DeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 70, -1));

        NewButton.setText("New");
        NewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewButtonActionPerformed(evt);
            }
        });
        add(NewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 71, -1));

        listEquipmentsButton1.setText("List Equipments ");
        listEquipmentsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listEquipmentsButton1ActionPerformed(evt);
            }
        });
        add(listEquipmentsButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 141, -1));

        viewSpecButton.setText("View Specifications");
        viewSpecButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSpecButtonActionPerformed(evt);
            }
        });
        add(viewSpecButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 450, 140, -1));

        setSpecButton.setText("Set Specifications");
        setSpecButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSpecButtonActionPerformed(evt);
            }
        });
        add(setSpecButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, 130, -1));
    }//GEN-END:initComponents

  EquipmentTypeDto et = new EquipmentTypeDto();

    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
        if(searchTextField.getText().equalsIgnoreCase("Enter text to search")){
            searchTextField.setText("");
        }
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
        if(searchTextField.getText().trim().equalsIgnoreCase("")){
            searchTextField.setText("Enter text to search");
        }
    }//GEN-LAST:event_searchTextFieldFocusLost

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed

    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try{
            String s = searchTextField.getText();
            if(!(s.equals("Enter text to search"))){
            EquipmentDao e = new DaoFactory().createEquipmentDao();
            List<EquipmentTypeDto> search_list = null;
            //et.setSearch(searchTextField.getText());
            EquipmentTypeDto equipt = new EquipmentTypeDto(searchTextField.getText());
            search_list = business.searchFor(equipt);
            if( search_list !=null )
            {
                setTableModel(search_list);
                EqTypeTable.repaint();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Equipmnet Type Not Found");
                setTableModel(search_list);
                EqTypeTable.repaint();
            }}
            else{
                JOptionPane.showMessageDialog(this, "Please Enter Text to Search For");
            }
            searchTextField.setText("Enter text to search");
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void codeTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codeTextFieldFocusGained
        if (codeTextField.getText().equalsIgnoreCase("Enter Code"))
        codeTextField.setText("");
    }//GEN-LAST:event_codeTextFieldFocusGained

    private void codeTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codeTextFieldFocusLost
        if (codeTextField.getText().trim().equalsIgnoreCase(""))
        codeTextField.setText("Enter Code");
    }//GEN-LAST:event_codeTextFieldFocusLost

    private void codeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeTextFieldActionPerformed

    private void IDTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDTextFieldFocusGained
        if (IDTextField.getText().equalsIgnoreCase("Enter ID"))
        IDTextField.setText("");
    }//GEN-LAST:event_IDTextFieldFocusGained

    private void IDTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IDTextFieldFocusLost
        if (IDTextField.getText().trim().equalsIgnoreCase(""))
        IDTextField.setText("Enter ID");
    }//GEN-LAST:event_IDTextFieldFocusLost

    private void IDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDTextFieldActionPerformed

    private void noOfEquipTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noOfEquipTextField1FocusGained
    if (noOfEquipTextField1.getText().equalsIgnoreCase("Enter Number of Equipments"))
    noOfEquipTextField1.setText("");
    }//GEN-LAST:event_noOfEquipTextField1FocusGained

    private void noOfEquipTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noOfEquipTextField1FocusLost
    if (noOfEquipTextField1.getText().trim().equalsIgnoreCase(""))
    noOfEquipTextField1.setText("Enter Number of Equipments");
    }//GEN-LAST:event_noOfEquipTextField1FocusLost

    private void noOfEquipTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfEquipTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfEquipTextField1ActionPerformed

    private void nameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFieldFocusGained
        if (nameTextField.getText().equalsIgnoreCase("Enter Name"))
        nameTextField.setText("");
    }//GEN-LAST:event_nameTextFieldFocusGained

    private void nameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTextFieldFocusLost
    if (nameTextField.getText().trim().equalsIgnoreCase(""))
    nameTextField.setText("Enter Name");
    }//GEN-LAST:event_nameTextFieldFocusLost

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try
        {   
            if(checkValidity()){
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            et.setId(Integer.parseInt(IDTextField.getText()));
            et.setCode(codeTextField.getText());
            et.setName(nameTextField.getText());
            et.setNo_of_equip(Integer.parseInt(noOfEquipTextField1.getText()));
            if(business.update(et)){
                JOptionPane.showMessageDialog(this, "Equipment Updated Successfully");
                setTableModel(e.viewAll());
                EqTypeTable.repaint();
            }else{
                EqTypeTable.repaint();
            }
        }
            IDTextField.setText("Enter ID");
            codeTextField.setText("Enter Code");
            nameTextField.setText("Enter Name");
            noOfEquipTextField1.setText("Enter Number of Equipments");
        }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        try{
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            setTableModel(e.viewAll());
            EqTypeTable.repaint();
        }
        catch(Exception e)
        { e.printStackTrace();}

    }//GEN-LAST:event_refreshButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        try{
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            int row = EqTypeTable.getSelectedRow();
            et.setId(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,0).toString()));
            et.setCode(EqTypeTable.getModel().getValueAt(row,1).toString());
            et.setName(EqTypeTable.getModel().getValueAt(row,2).toString());
            et.setNo_of_equip(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,3).toString()));
            if(business.delete(et)){
                JOptionPane.showMessageDialog(this, "Equipment Deleted Successfully");
                setTableModel(e.viewAll());
                EqTypeTable.repaint();
            }else{
                EqTypeTable.repaint();
            }
            }
        catch(java.lang.ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "Please select row from table to delete");
            }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void NewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewButtonActionPerformed
        try{       
            if (checkValidity()){
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            et.setId(Integer.parseInt(IDTextField.getText()));
            et.setCode(codeTextField.getText());
            et.setName(nameTextField.getText());
            et.setNo_of_equip(Integer.parseInt(noOfEquipTextField1.getText()));
            if(business.add(et)){
                JOptionPane.showMessageDialog(this, "Equipment Inserted Successfully");
                setTableModel(e.viewAll());
                EqTypeTable.repaint();
            }else
            {
            EqTypeTable.repaint();
        }}
            IDTextField.setText("Enter ID");
            codeTextField.setText("Enter Code");
            nameTextField.setText("Enter Name");
            noOfEquipTextField1.setText("Enter Number of Equipments");
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_NewButtonActionPerformed

    private void setNewTable(List<EquipmentDto> eq){
            int size = 0;
            if(eq != null && !eq.isEmpty())
                size = eq.size();
            
            Object [][] eqArr = new Object [size][4];
            for(int i =0;i<size;i++){
                eqArr[i][0] = eq.get(i).getId();
                eqArr[i][1] = eq.get(i).getCode();
                eqArr[i][2] = eq.get(i).getType().getId();
                eqArr[i][3] = eq.get(i).getCountry();

            }
            EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(eqArr,
                new String [] {
                    "Id", "Code", "Type ID" , "Country"
                }
            ));    
        }
    
    private void setSpecTable(List<EquipSpecificationDto> eq_spec){
            int size = 0;
            if(eq_spec != null && !eq_spec.isEmpty())
                size = eq_spec.size();
            
            Object [][] eqArr = new Object [size][3];
            for(int i =0;i<size;i++){
                eqArr[i][0] = eq_spec.get(i).getId();
                eqArr[i][1] = eq_spec.get(i).getName();
                eqArr[i][2] = eq_spec.get(i).getValue();


            }
            EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(eqArr,
                new String [] {
                    "Id", "Name", "Value"
                }
            ));    
        }

    private void listEquipmentsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listEquipmentsButton1ActionPerformed
        try{ 
            List<EquipmentDto> eq = null;        
            int row = EqTypeTable.getSelectedRow();
            et.setId(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,0).toString()));
            et.setCode(EqTypeTable.getModel().getValueAt(row,1).toString());
            et.setName(EqTypeTable.getModel().getValueAt(row,2).toString());
            et.setNo_of_equip(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,3).toString()));
            eq=business.loadAllEquips(et);
            if( eq!=null){
                setNewTable(eq);
                EqTypeTable.repaint();                
            }
            }
        
        catch(java.lang.ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "Please select type from table to show its equipments");
            }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_listEquipmentsButton1ActionPerformed

    private void EqTypeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EqTypeTableMouseClicked
        // TODO add your handling code here:
        int row = EqTypeTable.getSelectedRow();
        IDTextField.setText(EqTypeTable.getValueAt(row, 0).toString());
        codeTextField.setText(EqTypeTable.getValueAt(row, 1).toString());
        nameTextField.setText(EqTypeTable.getValueAt(row, 2).toString());
        noOfEquipTextField1.setText(EqTypeTable.getValueAt(row, 3).toString());
    }//GEN-LAST:event_EqTypeTableMouseClicked

    private void EqTypeTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EqTypeTableKeyPressed
        if( evt.getExtendedKeyCode()==KeyEvent.VK_UP || evt.getExtendedKeyCode()==KeyEvent.VK_DOWN ){
            int row = EqTypeTable.getSelectedRow();
            IDTextField.setText(EqTypeTable.getValueAt(row, 0).toString());
            codeTextField.setText(EqTypeTable.getValueAt(row, 1).toString());
            nameTextField.setText(EqTypeTable.getValueAt(row, 2).toString());
            noOfEquipTextField1.setText(EqTypeTable.getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_EqTypeTableKeyPressed

    private void viewSpecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSpecButtonActionPerformed
        try{
            EqTypeSpecDao dao = new DaoFactory().createEqTypeSpecDao();
            List<EquipSpecificationDto> eq_sp = null;
            int row = EqTypeTable.getSelectedRow();
           // EquipmentTypeDto eq_type = new EquipmentTypeDto(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,0).toString()));
            et.setId(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,0).toString()));
            et.setCode(EqTypeTable.getModel().getValueAt(row,1).toString());
            et.setName(EqTypeTable.getModel().getValueAt(row,2).toString());
            et.setNo_of_equip(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,3).toString()));
            eq_sp = dao.loadAllSpecif(et);
            if (eq_sp != null){
                setSpecTable(eq_sp);
                EqTypeTable.repaint();
            }   
        }
    catch(java.lang.ArrayIndexOutOfBoundsException e){
        JOptionPane.showMessageDialog(this, "Please select type from table to show its equipments");
        }
    catch(Exception e){
        e.printStackTrace();
    }
    }//GEN-LAST:event_viewSpecButtonActionPerformed

    private void setSpecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSpecButtonActionPerformed
    try {
        EqTypeSpecJPanel x = new EqTypeSpecJPanel();
        //CardLayout(x);
        add(x);
       // x.setBounds(BasicPanelUI.getBounds());
        //this.setTitle("Equipment types");
        //this.setContentPane(x);
        //this.validate();
        //this.repaint();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_setSpecButtonActionPerformed

    private boolean checkValidity(){
            try{
                if(IDTextField.getText().equalsIgnoreCase("Enter ID")){
                    JOptionPane.showMessageDialog(this, "Please, enter id number","",JOptionPane.ERROR_MESSAGE);
                    return false;            
                }
                Integer.parseInt(IDTextField.getText());
               // return true;
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "ID is invalid! \n (please enter a number)");
                         // own implemented dialog
                return false;
            }
            
            try{
                if(noOfEquipTextField1.getText().equalsIgnoreCase("Enter Number of Equipments")){
                    JOptionPane.showMessageDialog(this, "Please, enter id number","",JOptionPane.ERROR_MESSAGE);
                    return false;            
                }
                Integer.parseInt(noOfEquipTextField1.getText());
               // return true;
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Number of equipments is invalid! \n (please enter a number)");
                         // own implemented dialog
                return false;
            }
            
            try{
                if(codeTextField.getText().equalsIgnoreCase("Enter Code")){
                    JOptionPane.showMessageDialog(this, "Please, enter code");
                    return false;
                }
                    Integer.parseInt(codeTextField.getText());
                    JOptionPane.showMessageDialog(this, "Code is invalid! \n (please enter a string)");
                    return false;
                }catch (NumberFormatException e){
                             // own implemented dialog
                    
            try{
                if(nameTextField.getText().equalsIgnoreCase("Enter Name")){
                    JOptionPane.showMessageDialog(this, "Please, enter name");
                    return false;
                }
                    Integer.parseInt(nameTextField.getText());
                    JOptionPane.showMessageDialog(this, "Name is invalid! \n (please enter a string)");
                    return false;
                }catch (NumberFormatException es){
                             // own implemented dialog
                  //  return true;
            return true;
            }}
        }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTable EqTypeTable;
    private javax.swing.JTextField IDTextField;
    private javax.swing.JButton NewButton;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JLabel codeLabel1;
    private javax.swing.JLabel codeLabel2;
    private javax.swing.JTextField codeTextField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listEquipmentsButton1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField noOfEquipTextField1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton setSpecButton;
    private javax.swing.JButton viewSpecButton;
    // End of variables declaration//GEN-END:variables

}
