package com.fym.lta.UI;

/**
 *
 * @author Nada El-Gammal
 */


import com.fym.lta.BAO.BaoFactory;
import com.fym.lta.BAO.EquipmentTypeBao;
import com.fym.lta.DAO.DaoFactory;
import com.fym.lta.DAO.EqTypeSpecDao;
import com.fym.lta.DAO.EquipmentDao;
import com.fym.lta.DAO.EquipmentTypeDao;
import com.fym.lta.DAO.RoleScreenDao;
import com.fym.lta.DTO.EquipSpecificationDto;
import com.fym.lta.DTO.EquipmentDto;

import com.fym.lta.DTO.EquipmentTypeDto;

import com.fym.lta.DTO.UserDto;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;

import java.util.List;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;

public class EquipmentTypePanel extends javax.swing.JPanel {

  @SuppressWarnings("oracle.jdeveloper.java.serialversionuid-stale")
  private static final long serialVersionUID = 1L;

    // identify object of EquipmentTypeBao  
    private static EquipmentTypeBao business;
    private static UserDto user_data;


    /** Creates new form EquipmentTypePanel */
    public EquipmentTypePanel(UserDto user) {
        try {
                   business = new BaoFactory().createEquipmentTypeBao();
                   EquipmentTypeDao dao = new DaoFactory().createEquipmentTypeDao();
                   initComponents();
            user_data = user;
            viewonly(user_data);
                   //call setTableModel method and pass viewAll method to it as a parameter
                   setTableModel(dao.viewAll());            
                   
               } catch (Exception e) {
                   e.printStackTrace();
               }    }
    
    //method to set the table and allocate its columns and content
    private void setTableModel(List<EquipmentTypeDto> equipt){
            int size = 0;
            if(equipt != null && !equipt.isEmpty())
                size = equipt.size();
            
            Object [][] equipsArr = new Object [size][4];
            for(int i =0;i<size;i++){
                equipsArr[i][0] = equipt.get(i).getId();
                equipsArr[i][1] = equipt.get(i).getCode();
                equipsArr[i][2] = equipt.get(i).getName();
                equipsArr[i][3] = equipt.get(i).getNo_of_equip();

            }
            EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(equipsArr,
                new String [] {
                    "Id", "Code", "Name" , "No. Of Equipments"
                }
            ));


    //change header color
    EqTypeTable.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer()
    {

      @Override
      public Component getTableCellRendererComponent(JTable table,
        Object value, boolean isSelected, boolean hasFocus, int row,
        int column)
      {

        JLabel l =
          (JLabel) super.getTableCellRendererComponent(table, value,
          isSelected, hasFocus, row, column);
        l.setBackground(Color.decode("#0081D3"));
        // l.setBorder(new EtchedBorder());

        l.setForeground(Color.white);

        return l;
      }
    });
    
    //label under tabel show types count viewed in table
    no_of_rows.setText("Table result: "+
      Integer.toString(EqTypeTable.getRowCount())+"  Types");
        }


  /**For view only user access */
  private void viewonly(UserDto u)
  {

    u.setScreen_name("Equipment type");

    RoleScreenDao dao = new DaoFactory().createRoleScreenDao();
    if(dao.viewonly(u))
      {
        EditPanel.setVisible(false);
        System.out.println(" \n done panel");
      }
  }


  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents()//GEN-BEGIN:initComponents
  {

    searchTextField = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    EqTypeTable = new javax.swing.JTable();
    tableLabel = new javax.swing.JLabel();
    EditPanel = new javax.swing.JPanel();
    jSeparator1 = new javax.swing.JSeparator();
    IdText = new javax.swing.JTextField();
    CodeText = new javax.swing.JTextField();
    NameText = new javax.swing.JTextField();
    noOfEquipText = new javax.swing.JTextField();
    codeLabel = new javax.swing.JLabel();
    codeLabel1 = new javax.swing.JLabel();
    codeLabel2 = new javax.swing.JLabel();
    idLabel = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    savePanel = new javax.swing.JPanel();
    Save = new javax.swing.JButton();
    deletePanel = new javax.swing.JPanel();
    DeleteButton = new javax.swing.JButton();
    clearPanel = new javax.swing.JPanel();
    clear = new javax.swing.JButton();
    equipPanel = new javax.swing.JPanel();
    listEquipmentsButton1 = new javax.swing.JButton();
    specsPanel = new javax.swing.JPanel();
    viewSpecButton = new javax.swing.JButton();
    specsPanel1 = new javax.swing.JPanel();
    setSpecButton = new javax.swing.JButton();
    no_of_rows = new java.awt.Label();
    jLabel8 = new javax.swing.JLabel();
    jSeparator2 = new javax.swing.JSeparator();
    searchPanel = new javax.swing.JPanel();
    searchButton = new javax.swing.JButton();
    refreshPanel = new javax.swing.JPanel();
    refreshButton = new javax.swing.JButton();

    setBackground(new java.awt.Color(245, 245, 245));
    setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    searchTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    searchTextField.setText("Enter text to search");
    searchTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    searchTextField.setPreferredSize(new java.awt.Dimension(74, 19));
    searchTextField.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        searchTextFieldFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        searchTextFieldFocusLost(evt);
      }
    });
    searchTextField.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        searchTextFieldActionPerformed(evt);
      }
    });
    add(searchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 650, 50));

    EqTypeTable.setAutoCreateRowSorter(true);
    EqTypeTable.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][]
      {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String []
      {
        "ID", "Code", "Name", "No. Of Equips"
      }
    )
    {
      Class[] types = new Class []
      {
        java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
      };
      boolean[] canEdit = new boolean []
      {
        false, false, false, false
      };

      public Class getColumnClass(int columnIndex)
      {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex)
      {
        return canEdit [columnIndex];
      }
    });
    EqTypeTable.setFillsViewportHeight(true);
    EqTypeTable.setRowHeight(25);
    EqTypeTable.setSelectionBackground(new java.awt.Color(0, 153, 204));
    EqTypeTable.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        EqTypeTableMouseClicked(evt);
      }
    });
    EqTypeTable.addKeyListener(new java.awt.event.KeyAdapter()
    {
      public void keyPressed(java.awt.event.KeyEvent evt)
      {
        EqTypeTableKeyPressed(evt);
      }
    });
    jScrollPane1.setViewportView(EqTypeTable);
    if (EqTypeTable.getColumnModel().getColumnCount() > 0)
    {
      EqTypeTable.getColumnModel().getColumn(0).setHeaderValue("ID");
      EqTypeTable.getColumnModel().getColumn(1).setHeaderValue("Code");
      EqTypeTable.getColumnModel().getColumn(2).setHeaderValue("Name");
      EqTypeTable.getColumnModel().getColumn(3).setHeaderValue("No. Of Equips");
    }

    add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 121, 750, 760));

    tableLabel.setBackground(new java.awt.Color(231, 78, 123));
    tableLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    tableLabel.setForeground(new java.awt.Color(231, 78, 123));
    tableLabel.setText("Equipment Types Table:");
    add(tableLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 290, 30));

    EditPanel.setBackground(new java.awt.Color(245, 245, 245));
    EditPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
    EditPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 570, 14));

    IdText.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    IdText.setText("Enter ID");
    IdText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    IdText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        IdTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        IdTextFocusLost(evt);
      }
    });
    IdText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        IdTextActionPerformed(evt);
      }
    });
    EditPanel.add(IdText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 570, 50));

    CodeText.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    CodeText.setText("Enter Code");
    CodeText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    CodeText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        CodeTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        CodeTextFocusLost(evt);
      }
    });
    CodeText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        CodeTextActionPerformed(evt);
      }
    });
    EditPanel.add(CodeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 570, 50));

    NameText.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    NameText.setText("Enter Name");
    NameText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    NameText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        NameTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        NameTextFocusLost(evt);
      }
    });
    NameText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        NameTextActionPerformed(evt);
      }
    });
    EditPanel.add(NameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 570, 50));

    noOfEquipText.setEditable(false);
    noOfEquipText.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
    noOfEquipText.setText("Number of Equipemnts of this Type");
    noOfEquipText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
    noOfEquipText.setEnabled(false);
    noOfEquipText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusGained(java.awt.event.FocusEvent evt)
      {
        noOfEquipTextFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        noOfEquipTextFocusLost(evt);
      }
    });
    noOfEquipText.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        noOfEquipTextActionPerformed(evt);
      }
    });
    EditPanel.add(noOfEquipText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 570, 50));

    codeLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    codeLabel.setForeground(new java.awt.Color(0, 51, 204));
    codeLabel.setText("ID");
    EditPanel.add(codeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 156, -1, 30));

    codeLabel1.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    codeLabel1.setForeground(new java.awt.Color(0, 51, 204));
    codeLabel1.setText("Code");
    EditPanel.add(codeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 236, -1, 30));

    codeLabel2.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    codeLabel2.setForeground(new java.awt.Color(0, 51, 204));
    codeLabel2.setText("Name");
    EditPanel.add(codeLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 316, -1, 30));

    idLabel.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    idLabel.setForeground(new java.awt.Color(0, 51, 204));
    idLabel.setText("No. Of Equipments");
    EditPanel.add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, -1, 40));

    jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fym/lta/Images/icons8_maintenance_128px.png"))); // NOI18N
    EditPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

    savePanel.setBackground(new java.awt.Color(0, 129, 211));

    Save.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    Save.setForeground(new java.awt.Color(255, 255, 255));
    Save.setText("Save");
    Save.setBorderPainted(false);
    Save.setContentAreaFilled(false);
    Save.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        SaveMouseMoved(evt);
      }
    });
    Save.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        SaveMouseExited(evt);
      }
    });
    Save.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        SaveActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout savePanelLayout = new javax.swing.GroupLayout(savePanel);
    savePanel.setLayout(savePanelLayout);
    savePanelLayout.setHorizontalGroup(
      savePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Save, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
    );
    savePanelLayout.setVerticalGroup(
      savePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(Save, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
    );

    EditPanel.add(savePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, -1, -1));

    deletePanel.setBackground(new java.awt.Color(0, 129, 211));

    DeleteButton.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    DeleteButton.setForeground(new java.awt.Color(255, 255, 255));
    DeleteButton.setText("Delete");
    DeleteButton.setBorderPainted(false);
    DeleteButton.setContentAreaFilled(false);
    DeleteButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        DeleteButtonMouseMoved(evt);
      }
    });
    DeleteButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        DeleteButtonMouseExited(evt);
      }
    });
    DeleteButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        DeleteButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout deletePanelLayout = new javax.swing.GroupLayout(deletePanel);
    deletePanel.setLayout(deletePanelLayout);
    deletePanelLayout.setHorizontalGroup(
      deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
    );
    deletePanelLayout.setVerticalGroup(
      deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(DeleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
    );

    EditPanel.add(deletePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 500, -1, -1));

    clearPanel.setBackground(new java.awt.Color(0, 129, 211));

    clear.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    clear.setForeground(new java.awt.Color(255, 255, 255));
    clear.setText("Clear");
    clear.setBorderPainted(false);
    clear.setContentAreaFilled(false);
    clear.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        clearMouseMoved(evt);
      }
    });
    clear.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        clearMouseExited(evt);
      }
    });
    clear.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        clearActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout clearPanelLayout = new javax.swing.GroupLayout(clearPanel);
    clearPanel.setLayout(clearPanelLayout);
    clearPanelLayout.setHorizontalGroup(
      clearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(clear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
    );
    clearPanelLayout.setVerticalGroup(
      clearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
    );

    EditPanel.add(clearPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 500, 100, -1));

    equipPanel.setBackground(new java.awt.Color(0, 129, 211));

    listEquipmentsButton1.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    listEquipmentsButton1.setForeground(new java.awt.Color(255, 255, 255));
    listEquipmentsButton1.setText("List Equipments ");
    listEquipmentsButton1.setBorderPainted(false);
    listEquipmentsButton1.setContentAreaFilled(false);
    listEquipmentsButton1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        listEquipmentsButton1MouseMoved(evt);
      }
    });
    listEquipmentsButton1.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        listEquipmentsButton1MouseExited(evt);
      }
    });
    listEquipmentsButton1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        listEquipmentsButton1ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout equipPanelLayout = new javax.swing.GroupLayout(equipPanel);
    equipPanel.setLayout(equipPanelLayout);
    equipPanelLayout.setHorizontalGroup(
      equipPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(listEquipmentsButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
    );
    equipPanelLayout.setVerticalGroup(
      equipPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(listEquipmentsButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
    );

    EditPanel.add(equipPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 620, 170, 40));

    specsPanel.setBackground(new java.awt.Color(0, 129, 211));

    viewSpecButton.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    viewSpecButton.setForeground(new java.awt.Color(255, 255, 255));
    viewSpecButton.setText("View Specifications");
    viewSpecButton.setBorderPainted(false);
    viewSpecButton.setContentAreaFilled(false);
    viewSpecButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        viewSpecButtonMouseMoved(evt);
      }
    });
    viewSpecButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        viewSpecButtonMouseExited(evt);
      }
    });
    viewSpecButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        viewSpecButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout specsPanelLayout = new javax.swing.GroupLayout(specsPanel);
    specsPanel.setLayout(specsPanelLayout);
    specsPanelLayout.setHorizontalGroup(
      specsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(viewSpecButton, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
    );
    specsPanelLayout.setVerticalGroup(
      specsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(viewSpecButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
    );

    EditPanel.add(specsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 620, 180, 40));

    specsPanel1.setBackground(new java.awt.Color(0, 129, 211));

    setSpecButton.setFont(new java.awt.Font("VIP Rawy Regular", 0, 18)); // NOI18N
    setSpecButton.setForeground(new java.awt.Color(255, 255, 255));
    setSpecButton.setText("Set Specifications");
    setSpecButton.setBorderPainted(false);
    setSpecButton.setContentAreaFilled(false);
    setSpecButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        setSpecButtonMouseMoved(evt);
      }
    });
    setSpecButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        setSpecButtonMouseExited(evt);
      }
    });
    setSpecButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        setSpecButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout specsPanel1Layout = new javax.swing.GroupLayout(specsPanel1);
    specsPanel1.setLayout(specsPanel1Layout);
    specsPanel1Layout.setHorizontalGroup(
      specsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(setSpecButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
    );
    specsPanel1Layout.setVerticalGroup(
      specsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(setSpecButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
    );

    EditPanel.add(specsPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 620, 170, 40));

    add(EditPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 130, 610, 720));

    no_of_rows.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
    no_of_rows.setForeground(new java.awt.Color(135, 135, 135));
    no_of_rows.setText("no of rows");
    add(no_of_rows, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 880, 170, 30));

    jLabel8.setBackground(new java.awt.Color(231, 78, 123));
    jLabel8.setFont(new java.awt.Font("VIP Rawy Regular", 0, 36)); // NOI18N
    jLabel8.setForeground(new java.awt.Color(231, 78, 123));
    jLabel8.setText("Equipment type");
    add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 40, 280, 90));
    add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 110, 620, 20));

    searchPanel.setBackground(new java.awt.Color(0, 129, 211));

    searchButton.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    searchButton.setForeground(new java.awt.Color(255, 255, 255));
    searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fym/lta/Images/icons8_search_26px.png"))); // NOI18N
    searchButton.setBorderPainted(false);
    searchButton.setContentAreaFilled(false);
    searchButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        searchButtonMouseMoved(evt);
      }
    });
    searchButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        searchButtonMouseExited(evt);
      }
    });
    searchButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        searchButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
    searchPanel.setLayout(searchPanelLayout);
    searchPanelLayout.setHorizontalGroup(
      searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
    );
    searchPanelLayout.setVerticalGroup(
      searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    add(searchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 50, 90, 50));

    refreshPanel.setBackground(new java.awt.Color(0, 129, 211));

    refreshButton.setFont(new java.awt.Font("VIP Rawy Regular", 0, 20)); // NOI18N
    refreshButton.setForeground(new java.awt.Color(255, 255, 255));
    refreshButton.setText("Refresh ");
    refreshButton.setBorderPainted(false);
    refreshButton.setContentAreaFilled(false);
    refreshButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
    {
      public void mouseMoved(java.awt.event.MouseEvent evt)
      {
        refreshButtonMouseMoved(evt);
      }
    });
    refreshButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseExited(java.awt.event.MouseEvent evt)
      {
        refreshButtonMouseExited(evt);
      }
    });
    refreshButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        refreshButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout refreshPanelLayout = new javax.swing.GroupLayout(refreshPanel);
    refreshPanel.setLayout(refreshPanelLayout);
    refreshPanelLayout.setHorizontalGroup(
      refreshPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
    );
    refreshPanelLayout.setVerticalGroup(
      refreshPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
    );

    add(refreshPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 890, 120, 50));
  }//GEN-END:initComponents

    //create object of EquipmentTypeDto
  EquipmentTypeDto et = new EquipmentTypeDto();

    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
    // delete text from textfield when textfield is selected 
        if(searchTextField.getText().equalsIgnoreCase("Enter text to search")){
            searchTextField.setText("");

        searchTextField.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

      }
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
    // reset text of textfield to its default when its focus is lost
        if(searchTextField.getText().trim().equalsIgnoreCase("")){
            searchTextField.setText("Enter text to search");
        }

    searchTextField.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_searchTextFieldFocusLost

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
    try
      {
        // check that user has entered text in textfield
        String search = searchTextField.getText();
        if(!(search.equals("Enter text to search")))
          {
            List<EquipmentTypeDto> search_list = null;
            et.setSearch(searchTextField.getText());

            //pass the text of searchtextfield to the dto object
            search_list = business.searchFor(et);
            if(search_list!=null)
              {
                // reset and repaint the table with the returned search list

                setTableModel(search_list);
                EqTypeTable.repaint();
              }
            else
              { // show message when no equipment found then reset and repaint table to default

                JOptionPane.showMessageDialog(this,
                  "Equipmnet Type Not Found");

              }
          }
        else
          {
            JOptionPane.showMessageDialog(this,
              "Please Enter Text to Search For");
          }
      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
    //implementation of search button
        try{
            // check that user has entered text in textfield
            String search = searchTextField.getText();
            if(!(search.equals("Enter text to search"))){
            List<EquipmentTypeDto> search_list = null;
            et.setSearch(searchTextField.getText());
            
            //pass the text of searchtextfield to the dto object
            search_list = business.searchFor(et);
            if( search_list !=null )
            {
                // reset and repaint the table with the returned search list

                setTableModel(search_list);
                EqTypeTable.repaint();
            }
            else
                {   // show message when no equipment found then reset and repaint table to default

                JOptionPane.showMessageDialog(this, "Equipmnet Type Not Found");
                
            }}
            else{
                JOptionPane.showMessageDialog(this, "Please Enter Text to Search For");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void CodeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodeTextFocusGained
    // delete text from textfield when textfield is selected 
        if (CodeText.getText().equalsIgnoreCase("Enter Code"))
        CodeText.setText("");

    CodeText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_CodeTextFocusGained

    private void CodeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CodeTextFocusLost
    // reset text of textfield to its default when its focus is lost
        if (CodeText.getText().trim().equalsIgnoreCase(""))
        CodeText.setText("Enter Code");

    CodeText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_CodeTextFocusLost

    private void CodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodeTextActionPerformed

    private void IdTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusGained
    // delete text from textfield when textfield is selected 
        if (IdText.getText().equalsIgnoreCase("Enter ID"))
        IdText.setText("");
        
    IdText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_IdTextFocusGained

    private void IdTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_IdTextFocusLost
    // reset text of textfield to its default when its focus is lost
        if (IdText.getText().trim().equalsIgnoreCase(""))
        IdText.setText("Enter ID");

    IdText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_IdTextFocusLost

    private void IdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdTextActionPerformed

    private void NameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameTextFocusGained
    // delete text from textfield when textfield is selected 
        if (NameText.getText().equalsIgnoreCase("Enter Name"))
        NameText.setText("");

    NameText.setBorder(new LineBorder(Color.decode("#0081D3"), 2));

    }//GEN-LAST:event_NameTextFocusGained

    private void NameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NameTextFocusLost
    // reset text of textfield to its default when its focus is lost
    if (NameText.getText().trim().equalsIgnoreCase(""))
    NameText.setText("Enter Name");

    NameText.setBorder(new LineBorder(Color.decode("#CCCCCC"), 2));

    }//GEN-LAST:event_NameTextFocusLost

    private void NameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTextActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
      
    //implementation of refresh button
        try{
            // reset and repaint the table then set text of textfields to its default when panel is opened
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            setTableModel(e.viewAll());
            EqTypeTable.repaint();
            IdText.setEnabled(true);
            noOfEquipText.setEnabled(false);
            tableLabel.setText("Equipment Types Table:");
            IdText.setText("Enter ID");
            CodeText.setText("Enter Code");
            NameText.setText("Enter Name");
            noOfEquipText.setText("Number of Equipemnts of selected Type");
            Save.setText("Save");

      }
        catch(Exception e)
        { e.printStackTrace();}

    }//GEN-LAST:event_refreshButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
    // implementation of delete button 
        try{
                // get the select row count from table
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            int row = EqTypeTable.getSelectedRow();
            
                // get data from the selected row and store it to the dto object fields 
            et.setId(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,0).toString()));
            et.setCode(EqTypeTable.getModel().getValueAt(row,1).toString());
            et.setName(EqTypeTable.getModel().getValueAt(row,2).toString());
            et.setNo_of_equip(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,3).toString()));
            
                // call delete method from bao and pass the dto object to it as parameter to delete it
            if(business.delete(et)){
                //show message when process terminated successfully
                JOptionPane.showMessageDialog(this, "Equipment Deleted Successfully");
              IdText.setEnabled(true);
              Save.setText("Save");

            //set the table with the newest list in database and repaint it using listAll method in bao
                setTableModel(e.viewAll());
                EqTypeTable.repaint();
            }else{
                EqTypeTable.repaint();
            }
            }
        catch(java.lang.ArrayIndexOutOfBoundsException e){
                // show message if no row is selected from table 
            JOptionPane.showMessageDialog(this, "Please select row from table to delete");
            }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
    if(Save.getText().equalsIgnoreCase("Update"))
      update();

    else{
      
        try{       
            //check validity of data enterd by user 
            if (checkValidity()){
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            
            //pass data from textfields to dto object properties 
            et.setId(Integer.parseInt(IdText.getText()));
            et.setCode(CodeText.getText());
            et.setName(NameText.getText());
            
            //call insert method from bao and pass the dto object as parameter
            if(business.add(et, user_data)){
                
                //show message when method terminated successfully
                JOptionPane.showMessageDialog(this, "Equipment Inserted Successfully");
                
                // reset and repaint the table after adding equipment
                setTableModel(e.viewAll());
                EqTypeTable.repaint();
                IdText.setEnabled(false);
                Save.setText("Update");
                    noOfEquipText.setEnabled(false);

                  }
           
              else{
                int reply =
                  JOptionPane.showConfirmDialog(null,
                    "This equipment type is already exist!\n\n"+
                    "Do you want update it?", "Warning",
                    JOptionPane.YES_NO_OPTION);

                //update object if user choose yes
                if(reply==JOptionPane.YES_OPTION)
                  {
                    update();
                    Save.setText("Update");
                    IdText.setEnabled(false);                 
                  }}            }
            
            
        }
        catch(Exception e){
            e.printStackTrace();
        }}
    }//GEN-LAST:event_SaveActionPerformed

//method to set table of all equipments details of selected equipment type
    private void setNewTable(List<EquipmentDto> eq){
            int size = 0;
            if(eq != null && !eq.isEmpty())
                size = eq.size();
            
            Object [][] eqArr = new Object [size][4];
            for(int i =0;i<size;i++){
                eqArr[i][0] = eq.get(i).getId();
                eqArr[i][1] = eq.get(i).getCode();
                eqArr[i][2] = eq.get(i).getType().getId();
                eqArr[i][3] = eq.get(i).getCountry();

            }
            EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(eqArr,
                new String [] {
                    "Id", "Code", "Type ID" , "Country"
                }
            ));    
        }
    
    // method to set table of all specifications details of selected equipment type
    private void setSpecTable(List<EquipSpecificationDto> eq_spec){
            int size = 0;
            if(eq_spec != null && !eq_spec.isEmpty())
                size = eq_spec.size();
            
            Object [][] eqArr = new Object [size][3];
            for(int i =0;i<size;i++){
                eqArr[i][0] = eq_spec.get(i).getId();
                eqArr[i][1] = eq_spec.get(i).getName();
                eqArr[i][2] = eq_spec.get(i).getValue();


            }
            EqTypeTable.setModel(new javax.swing.table.DefaultTableModel(eqArr,
                new String [] {
                    "Id", "Name", "Value"
                }
            ));    
        }

    private void listEquipmentsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listEquipmentsButton1ActionPerformed
       // implementation of list all equipments button
        try{
            //identify list of equipment dto
            List<EquipmentDto> eq = null;        
            int row = EqTypeTable.getSelectedRow();
    // get data of equipment type from the selected row and pass it to the dto object
            et.setId(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,0).toString()));
            et.setCode(EqTypeTable.getModel().getValueAt(row,1).toString());
            et.setName(EqTypeTable.getModel().getValueAt(row,2).toString());
            et.setNo_of_equip(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,3).toString()));
           
      // call loadAllEquips method from bao     
            eq=business.loadAllEquips(et);
            if( eq!=null){
                
                // reset and repaint the table with equipments details (if found) 
                setNewTable(eq);
                EqTypeTable.repaint();
                tableLabel.setText("Equipments of Selected Type");
            }
            }
        
        catch(java.lang.ArrayIndexOutOfBoundsException e){
            
            //show message if now type is selected
            JOptionPane.showMessageDialog(this, "Please select type from table to show its equipments");
            }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_listEquipmentsButton1ActionPerformed

    private void EqTypeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EqTypeTableMouseClicked
    // set text of textfields by the data of the mouse clicked row in table
    noOfEquipText.setEnabled(false);
    int row = EqTypeTable.getSelectedRow();
        IdText.setEnabled(false);
    Save.setText("Update");

    IdText.setText(EqTypeTable.getValueAt(row, 0).toString());
        CodeText.setText(EqTypeTable.getValueAt(row, 1).toString());
        NameText.setText(EqTypeTable.getValueAt(row, 2).toString());
        noOfEquipText.setText(EqTypeTable.getValueAt(row, 3).toString());
    }//GEN-LAST:event_EqTypeTableMouseClicked

    private void EqTypeTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EqTypeTableKeyPressed
    // set text of textfields by the data of the keypressed row in table 
        if( evt.getExtendedKeyCode()==KeyEvent.VK_UP || evt.getExtendedKeyCode()==KeyEvent.VK_DOWN ){
            noOfEquipText.setEnabled(false);
            int row = EqTypeTable.getSelectedRow();
            if(evt.getExtendedKeyCode() == KeyEvent.VK_UP)
                row--;      //for up key decrement
            else if(evt.getExtendedKeyCode() == KeyEvent.VK_DOWN)
                row++;      // down key increment
            IdText.setEnabled(false);
             Save.setText("Update");

            IdText.setText(EqTypeTable.getValueAt(row, 0).toString());
            CodeText.setText(EqTypeTable.getValueAt(row, 1).toString());
            NameText.setText(EqTypeTable.getValueAt(row, 2).toString());
            noOfEquipText.setText(EqTypeTable.getValueAt(row, 3).toString());
        }
    }//GEN-LAST:event_EqTypeTableKeyPressed

    private void viewSpecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSpecButtonActionPerformed
        // implementation of view specifications button
        try{
            EqTypeSpecDao dao = new DaoFactory().createEqTypeSpecDao();
            
            //identify list of equipment specifications dto
            List<EquipSpecificationDto> eq_sp = null;
            int row = EqTypeTable.getSelectedRow();
            
            //get data of equipment type from selected row in table and pass it to the dto object to view its specifications 
            et.setId(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,0).toString()));
            et.setCode(EqTypeTable.getModel().getValueAt(row,1).toString());
            et.setName(EqTypeTable.getModel().getValueAt(row,2).toString());
            et.setNo_of_equip(Integer.parseInt(EqTypeTable.getModel().getValueAt(row,3).toString()));
            
            //call the method
            eq_sp = dao.loadAllSpecif(et);
            if (eq_sp != null){
                
                // reset and repaint the table with the specifications of the selected type if found
                setSpecTable(eq_sp);
                EqTypeTable.repaint();
                tableLabel.setText("Specifications of Selected Type");
            }   
            else{
                //show message if no specifications set for the selected type
                JOptionPane.showMessageDialog(this, "No Specifications Set For This Type");
                EqTypeTable.repaint();
            }
        }
    catch(java.lang.ArrayIndexOutOfBoundsException e){
            
            //show error message if no type is selecte from table
        JOptionPane.showMessageDialog(this, "Please select type from table to show its specifications");
        }
    catch(Exception e){
        e.printStackTrace();
    }
    }//GEN-LAST:event_viewSpecButtonActionPerformed

    private void setSpecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSpecButtonActionPerformed
    
    try
      {


        EqTypeSpecPanel specs = new EqTypeSpecPanel(user_data);
        specs.setBounds(this.getBounds());
        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(specs);


      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
    }//GEN-LAST:event_setSpecButtonActionPerformed

    private void noOfEquipTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfEquipTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfEquipTextActionPerformed

    private void noOfEquipTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noOfEquipTextFocusLost
    // reset text of textfield to its default when its focus is lost
        if (noOfEquipText.getText().trim().equalsIgnoreCase(""))
        noOfEquipText.setText("Number of Equipemnts of this Type");
    }//GEN-LAST:event_noOfEquipTextFocusLost

    private void noOfEquipTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noOfEquipTextFocusGained
    // delete text from textfield when textfield is selected 
        if (noOfEquipText.getText().equalsIgnoreCase("Number of Equipemnts of this Type"))
        noOfEquipText.setText("");
    }//GEN-LAST:event_noOfEquipTextFocusGained

  private void clearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearActionPerformed
  {//GEN-HEADEREND:event_clearActionPerformed
    // TODO add your handling code here:
    
    IdText.setEnabled(true);
    noOfEquipText.setEnabled(false);
    tableLabel.setText("Equipment Types Table:");
    IdText.setText("Enter ID");
    CodeText.setText("Enter Code");
    NameText.setText("Enter Name");
    noOfEquipText.setText("Number of Equipemnts of selected Type");
    Save.setText("Save");
  }//GEN-LAST:event_clearActionPerformed

  private void searchButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchButtonMouseExited
  {//GEN-HEADEREND:event_searchButtonMouseExited
    // TODO add your handling code here:

    searchPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_searchButtonMouseExited

  private void SaveMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_SaveMouseExited
  {//GEN-HEADEREND:event_SaveMouseExited
    // TODO add your handling code here:

    savePanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_SaveMouseExited

  private void DeleteButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_DeleteButtonMouseExited
  {//GEN-HEADEREND:event_DeleteButtonMouseExited
    // TODO add your handling code here:

    deletePanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_DeleteButtonMouseExited

  private void clearMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clearMouseExited
  {//GEN-HEADEREND:event_clearMouseExited
    // TODO add your handling code here:

    clearPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_clearMouseExited

  private void listEquipmentsButton1MouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_listEquipmentsButton1MouseExited
  {//GEN-HEADEREND:event_listEquipmentsButton1MouseExited
    // TODO add your handling code here:
    equipPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_listEquipmentsButton1MouseExited

  private void viewSpecButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_viewSpecButtonMouseExited
  {//GEN-HEADEREND:event_viewSpecButtonMouseExited
    // TODO add your handling code here:
    specsPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_viewSpecButtonMouseExited

  private void setSpecButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_setSpecButtonMouseExited
  {//GEN-HEADEREND:event_setSpecButtonMouseExited
    // TODO add your handling code here:

    specsPanel1.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_setSpecButtonMouseExited

  private void refreshButtonMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_refreshButtonMouseExited
  {//GEN-HEADEREND:event_refreshButtonMouseExited
    // TODO add your handling code here:
    refreshPanel.setBackground(Color.decode("#0081D3"));

  }//GEN-LAST:event_refreshButtonMouseExited

  private void refreshButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_refreshButtonMouseMoved
  {//GEN-HEADEREND:event_refreshButtonMouseMoved
    // TODO add your handling code here:
    refreshPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_refreshButtonMouseMoved

  private void searchButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchButtonMouseMoved
  {//GEN-HEADEREND:event_searchButtonMouseMoved
    // TODO add your handling code here:
    searchPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_searchButtonMouseMoved

  private void SaveMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_SaveMouseMoved
  {//GEN-HEADEREND:event_SaveMouseMoved
    // TODO add your handling code here:
    savePanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_SaveMouseMoved

  private void DeleteButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_DeleteButtonMouseMoved
  {//GEN-HEADEREND:event_DeleteButtonMouseMoved
    // TODO add your handling code here:
    deletePanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_DeleteButtonMouseMoved

  private void clearMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clearMouseMoved
  {//GEN-HEADEREND:event_clearMouseMoved
    // TODO add your handling code here:
    clearPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_clearMouseMoved

  private void listEquipmentsButton1MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_listEquipmentsButton1MouseMoved
  {//GEN-HEADEREND:event_listEquipmentsButton1MouseMoved
    // TODO add your handling code here:
    equipPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_listEquipmentsButton1MouseMoved

  private void viewSpecButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_viewSpecButtonMouseMoved
  {//GEN-HEADEREND:event_viewSpecButtonMouseMoved
    // TODO add your handling code here:
    specsPanel.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_viewSpecButtonMouseMoved

  private void setSpecButtonMouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_setSpecButtonMouseMoved
  {//GEN-HEADEREND:event_setSpecButtonMouseMoved
    // TODO add your handling code here:
    specsPanel1.setBackground(Color.decode("#0051D2"));

  }//GEN-LAST:event_setSpecButtonMouseMoved

// method to check the validity of user input in each text field 
    private boolean checkValidity(){
            try{
                if(IdText.getText().equalsIgnoreCase("Enter ID")){
                    JOptionPane.showMessageDialog(this, "Please, enter id number","",JOptionPane.ERROR_MESSAGE);
                    return false;            
                }
                Integer.parseInt(IdText.getText());
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "ID is invalid! \n (please enter a number)");
                return false;
            }
            
            try{
                if(CodeText.getText().equalsIgnoreCase("Enter Code")){
                    JOptionPane.showMessageDialog(this, "Please, enter code");
                    return false;
                }
                    Integer.parseInt(CodeText.getText().substring(0,1));
                    JOptionPane.showMessageDialog(this, "Code is invalid! \n It should begin with character");
                    return false;
                }catch (NumberFormatException e){    
            try{
                if(NameText.getText().equalsIgnoreCase("Enter Name")){
                    JOptionPane.showMessageDialog(this, "Please, enter name");
                    return false;
                }
                    Integer.parseInt(NameText.getText());
                    JOptionPane.showMessageDialog(this, "Name is invalid! \n (please enter a string)");
                    return false;
                }catch (NumberFormatException es){
            return true;
            }}
        }


private void update()
{
    try
      {
        // check the data validity enterd by user
        if(checkValidity())
          {
            EquipmentTypeDao e = new DaoFactory().createEquipmentTypeDao();
            noOfEquipText.setEnabled(true);
            // store data entered by user in dto object attributes
            et.setId(Integer.parseInt(IdText.getText()));
            et.setCode(CodeText.getText());
            et.setName(NameText.getText());
            /* call update method from bao then show message if the process terminated successfully
      and repaint the table with the lateset updates */
            if(business.update(et, user_data))
              {

                //show message when process terminated successfully then reset and repaint table with latest data
                JOptionPane.showMessageDialog(this,
                  "Equipment Updated Successfully");
                setTableModel(e.viewAll());
                EqTypeTable.repaint();
              }
            else
              {
                JOptionPane.showMessageDialog(this,
                  "Equipment doesn't exist", "Error", 0);

              }
          }

      }
    catch(Exception e)
      {
        e.printStackTrace();
      }  
  
}

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField CodeText;
  private javax.swing.JButton DeleteButton;
  private javax.swing.JPanel EditPanel;
  private javax.swing.JTable EqTypeTable;
  private javax.swing.JTextField IdText;
  private javax.swing.JTextField NameText;
  private javax.swing.JButton Save;
  private javax.swing.JButton clear;
  private javax.swing.JPanel clearPanel;
  private javax.swing.JLabel codeLabel;
  private javax.swing.JLabel codeLabel1;
  private javax.swing.JLabel codeLabel2;
  private javax.swing.JPanel deletePanel;
  private javax.swing.JPanel equipPanel;
  private javax.swing.JLabel idLabel;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JSeparator jSeparator2;
  private javax.swing.JButton listEquipmentsButton1;
  private javax.swing.JTextField noOfEquipText;
  private java.awt.Label no_of_rows;
  private javax.swing.JButton refreshButton;
  private javax.swing.JPanel refreshPanel;
  private javax.swing.JPanel savePanel;
  private javax.swing.JButton searchButton;
  private javax.swing.JPanel searchPanel;
  private javax.swing.JTextField searchTextField;
  private javax.swing.JButton setSpecButton;
  private javax.swing.JPanel specsPanel;
  private javax.swing.JPanel specsPanel1;
  private javax.swing.JLabel tableLabel;
  private javax.swing.JButton viewSpecButton;
  // End of variables declaration//GEN-END:variables

}
