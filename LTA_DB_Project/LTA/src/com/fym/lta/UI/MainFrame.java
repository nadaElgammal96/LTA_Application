
package com.fym.lta.UI;

import com.fym.lta.DAO.RoleScreenDaoImpl;
import com.fym.lta.DTO.UserDto;

import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.UIManager;


/**
 *
 * @author Mai-AbdEltwab
 */
public class MainFrame extends javax.swing.JFrame {
    @SuppressWarnings({ "compatibility:-6985462353223295871",
      "oracle.jdeveloper.java.serialversionuid-stale" })
    private static final long serialVersionUID = 1L;

    static UserDto userdto ;

    /** Creates new form Main_Frame */
    public MainFrame(UserDto user) {
        initComponents();

        //Set frame to the max size of screen
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
          setpanels();
          check(user);
        this.setTitle("LTA - Start Page");
    
        usernamelabel.setText(user.getUsername()+",");

        
          userdto = user  ;
    }


  private void check(UserDto user)
  {
    RoleScreenDaoImpl dao = new RoleScreenDaoImpl();
    ArrayList<String> panels = new ArrayList<String>(dao.checkPanel(user));
    int ss = 0;
    for(int i = 0; i<database.getItemCount(); i++)
      {
        if(i==4||i==9||i==13)
          {
            i++;
          }
        for(int x = 0; x<panels.size(); x++)
          {
            if(database.getItem(i).getText().matches(panels.get(x)))
              {
                database.getItem(i).setVisible(true);
              }
            else
              {

                ss++;
              }
          }
      }
    System.out.println(ss);
  }
  
  

  private void setpanels()
  {
    for(int i = 0; i<database.getItemCount(); i++)
      {
        if(i==4||i==9||i==13)
          {
            i++;
          }
        database.getItem(i).setVisible(false);

      }
  }
  
  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  private void initComponents()//GEN-BEGIN:initComponents
  {
    java.awt.GridBagConstraints gridBagConstraints;

    BasicPanel = new javax.swing.JPanel();
    ToolBar = new javax.swing.JToolBar();
    filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
    ToolBar1 = new javax.swing.JToolBar();
    usernamelabel = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    MenuBar = new javax.swing.JMenuBar();
    File = new javax.swing.JMenu();
    jMenuItem1 = new javax.swing.JMenuItem();
    SetLocations = new javax.swing.JMenu();
    SetManual = new javax.swing.JMenu();
    SetManualExist = new javax.swing.JMenuItem();
    SetManualNew = new javax.swing.JMenuItem();
    Auto = new javax.swing.JMenu();
    SetAutoNew = new javax.swing.JMenuItem();
    SetAutoExist = new javax.swing.JMenuItem();
    jSeparator5 = new javax.swing.JPopupMenu.Separator();
    jMenuItem2 = new javax.swing.JMenuItem();
    jSeparator6 = new javax.swing.JPopupMenu.Separator();
    Exit = new javax.swing.JMenuItem();
    database = new javax.swing.JMenu();
    Location = new javax.swing.JMenuItem();
    LocationType = new javax.swing.JMenuItem();
    Floor = new javax.swing.JMenuItem();
    Building = new javax.swing.JMenuItem();
    jSeparator1 = new javax.swing.JPopupMenu.Separator();
    Course = new javax.swing.JMenuItem();
    Department = new javax.swing.JMenuItem();
    Staff = new javax.swing.JMenuItem();
    Employee = new javax.swing.JMenuItem();
    jSeparator2 = new javax.swing.JPopupMenu.Separator();
    Equip = new javax.swing.JMenuItem();
    EquipType = new javax.swing.JMenuItem();
    EquipmentSpecification = new javax.swing.JMenuItem();
    jSeparator3 = new javax.swing.JPopupMenu.Separator();
    User = new javax.swing.JMenuItem();
    Role = new javax.swing.JMenuItem();
    Screen = new javax.swing.JMenuItem();
    Help = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

    BasicPanel.setLayout(new java.awt.GridBagLayout());

    ToolBar.setRollover(true);
    ToolBar.add(filler1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.ipadx = 1763;
    gridBagConstraints.ipady = 21;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 1216, 0);
    BasicPanel.add(ToolBar, gridBagConstraints);

    ToolBar1.setRollover(true);

    usernamelabel.setText("username");
    ToolBar1.add(usernamelabel);

    jButton1.setText("account setting");
    jButton1.setFocusable(false);
    jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton1ActionPerformed(evt);
      }
    });
    ToolBar1.add(jButton1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.ipadx = 19;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 6, 1216, 0);
    BasicPanel.add(ToolBar1, gridBagConstraints);

    getContentPane().add(BasicPanel);

    File.setText("File");

    jMenuItem1.setText("upload sch");
    jMenuItem1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jMenuItem1ActionPerformed(evt);
      }
    });
    File.add(jMenuItem1);

    SetLocations.setText("Set locations");

    SetManual.setText("Manual assignment");

    SetManualExist.setText("Exit schedule");
    SetManual.add(SetManualExist);

    SetManualNew.setText("New schedule");
    SetManual.add(SetManualNew);

    SetLocations.add(SetManual);

    Auto.setText("Automatic assignment");

    SetAutoNew.setText("New schedule ");
    Auto.add(SetAutoNew);

    SetAutoExist.setText("Exist Sschedule");
    Auto.add(SetAutoExist);

    SetLocations.add(Auto);

    File.add(SetLocations);
    File.add(jSeparator5);

    jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
    jMenuItem2.setText("Sign out");
    jMenuItem2.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jMenuItem2ActionPerformed(evt);
      }
    });
    File.add(jMenuItem2);
    File.add(jSeparator6);

    Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
    Exit.setText("Exit");
    Exit.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        ExitMouseClicked(evt);
      }
    });
    Exit.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        ExitActionPerformed(evt);
      }
    });
    File.add(Exit);

    MenuBar.add(File);

    database.setText("DataBase");

    Location.setText("Location");
    Location.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        LocationActionPerformed(evt);
      }
    });
    database.add(Location);

    LocationType.setText("Locaton type");
    LocationType.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        LocationTypeActionPerformed(evt);
      }
    });
    database.add(LocationType);

    Floor.setText("Floor");
    Floor.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        FloorActionPerformed(evt);
      }
    });
    database.add(Floor);

    Building.setText("Building");
    Building.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        BuildingActionPerformed(evt);
      }
    });
    database.add(Building);
    database.add(jSeparator1);

    Course.setText("Course");
    Course.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        CourseActionPerformed(evt);
      }
    });
    database.add(Course);

    Department.setText("Department");
    Department.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        DepartmentActionPerformed(evt);
      }
    });
    database.add(Department);

    Staff.setText("Staff member");
    Staff.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        StaffActionPerformed(evt);
      }
    });
    database.add(Staff);

    Employee.setText("Employee");
    Employee.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        EmployeeActionPerformed(evt);
      }
    });
    database.add(Employee);
    database.add(jSeparator2);

    Equip.setText("Equipment");
    Equip.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        EquipActionPerformed(evt);
      }
    });
    database.add(Equip);

    EquipType.setText("Equipment type");
    EquipType.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        EquipTypeActionPerformed(evt);
      }
    });
    database.add(EquipType);

    EquipmentSpecification.setText("Equipment Specification");
    EquipmentSpecification.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        EquipmentSpecificationActionPerformed(evt);
      }
    });
    database.add(EquipmentSpecification);
    database.add(jSeparator3);

    User.setText("User");
    User.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        UserActionPerformed(evt);
      }
    });
    database.add(User);

    Role.setText("Role");
    Role.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        RoleActionPerformed(evt);
      }
    });
    database.add(Role);

    Screen.setText("Role Screens");
    Screen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        ScreenActionPerformed(evt);
      }
    });
    database.add(Screen);

    MenuBar.add(database);

    Help.setText("Help");
    MenuBar.add(Help);

    setJMenuBar(MenuBar);

    pack();
    setLocationRelativeTo(null);
  }//GEN-END:initComponents

    private void LocationTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationTypeActionPerformed

    // open location type panel on main frame by clicking on location type menu bar item      

        try {
            LocationTypePanel location_type = new LocationTypePanel(userdto);
            location_type.setBounds(BasicPanel.getBounds());
            this.setTitle("Location Type");
            this.setContentPane(location_type);
            this.validate();
            this.repaint();
        } catch (Exception e) {
            e.printStackTrace();}
    }//GEN-LAST:event_LocationTypeActionPerformed

    private void FloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FloorActionPerformed

    // open foor panel on main frame by clicking on floor menu bar item 

    try {
        FloorPanel floor = new FloorPanel(userdto);
        floor.setBounds(BasicPanel.getBounds());
        this.setTitle("Floors");
        this.setContentPane(floor);
        this.validate();
        this.repaint();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_FloorActionPerformed

    private void BuildingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuildingActionPerformed

    // open building panel on main frame by clicking on building menu bar item 

        try {
            BuildingPanel building = new BuildingPanel(userdto);
            building.setBounds(BasicPanel.getBounds());
            this.setTitle("Faculty - Buildings");
            this.setContentPane(building);
            this.validate();
            this.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_BuildingActionPerformed

    private void CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseActionPerformed

    // open course panel on main frame by clicking on course menu bar item 

    try {
        CoursePanel course = new CoursePanel(userdto);
        course.setBounds(BasicPanel.getBounds());
        this.setTitle("Courses");
        this.setContentPane(course);
        this.validate();
        this.repaint();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_CourseActionPerformed

    private void DepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepartmentActionPerformed

    // open department panel on main frame by clicking on department menu bar item 

        try {
            DepartmentPanel department = new DepartmentPanel(userdto);
            department.setBounds(BasicPanel.getBounds());
            this.setTitle("Faculty - Departments");
            this.setContentPane(department);
            this.validate();
            this.repaint();            
        } catch (Exception e) {
            e.printStackTrace();}
    }//GEN-LAST:event_DepartmentActionPerformed

    private void StaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffActionPerformed

    // open staff panel on main frame by clicking on staff menu bar item 

    try {
        StaffPanel x = new StaffPanel(userdto);
        x.setBounds(BasicPanel.getBounds());
        this.setTitle("Staff Members");
        this.setContentPane(x);
        this.validate();
        this.repaint();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_StaffActionPerformed

    private void EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeActionPerformed

    // open employee panel on main frame by clicking on employee menu bar item 

        try {
            EmployeePanel emp = new EmployeePanel(userdto);
            emp.setBounds(BasicPanel.getBounds());
            this.setTitle("Employees");
            this.setContentPane(emp);
            this.validate();
            this.repaint();
        } catch (Exception e) {
            e.printStackTrace();}
    }//GEN-LAST:event_EmployeeActionPerformed

    private void EquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EquipActionPerformed

    // open equipment panel on main frame by clicking on equipment menu bar item 

        try {
            EquipmentPanel equip = new EquipmentPanel(userdto);
            equip.setBounds(BasicPanel.getBounds());
            this.setTitle("Equipments");
            this.setContentPane(equip);
            this.validate();
            this.repaint();
        } catch (Exception e) {
            e.printStackTrace();}
    }//GEN-LAST:event_EquipActionPerformed

    private void EquipTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EquipTypeActionPerformed

    // open equipment type panel on main frame by clicking on equipment type menu bar item 

        try {
            EquipmentTypePanel equip_type = new EquipmentTypePanel(userdto);
            equip_type.setBounds(BasicPanel.getBounds());
            this.setTitle("Equipment types");
            this.setContentPane(equip_type);
            this.validate();
            this.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_EquipTypeActionPerformed

    private void RoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoleActionPerformed
    // open role panel on main frame by clicking on role menu bar item 

        try {
            RolePanel role = new RolePanel(userdto);
            role.setBounds(BasicPanel.getBounds());
            this.setTitle("User's Role");
            this.setContentPane(role);
            this.validate();
            this.repaint();
        } catch (Exception e) {
            e.printStackTrace();}
    }//GEN-LAST:event_RoleActionPerformed

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked

    }//GEN-LAST:event_ExitMouseClicked

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed

        this.dispose();

    }//GEN-LAST:event_ExitActionPerformed

    private void EquipmentSpecificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EquipmentSpecificationActionPerformed
   
    // open equipment specification panel on main frame by clicking on equipment specification menu bar item 
    try {
        EqSpecificationPanel eq_spec = new EqSpecificationPanel(userdto);
        eq_spec.setBounds(BasicPanel.getBounds());
        this.setTitle("Equipment Specifications");
        this.setContentPane(eq_spec);
        this.validate();
        this.repaint();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_EquipmentSpecificationActionPerformed

    private void LocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationActionPerformed
    
    // open location panel on main frame by clicking on location menu bar item 
    try {
        LocationPanel location = new LocationPanel(userdto);
        location.setBounds(BasicPanel.getBounds());
        this.setTitle("Locations");
        this.setContentPane(location);
        this.validate();
        this.repaint();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_LocationActionPerformed

    private void UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserActionPerformed
    
    // open user panel on main frame by clicking on user menu bar item 

    try {
        UserPanel user = new UserPanel(userdto);
        user.setBounds(BasicPanel.getBounds());
        this.setTitle("Users");
        this.setContentPane(user);
        this.validate();
        this.repaint();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_UserActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        try {
        LogInFrame logout = new LogInFrame();
          
        logout.logout(userdto);
          
        this.dispose();
        
        } catch (Exception e) {
        e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

  private void ScreenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ScreenActionPerformed
  {//GEN-HEADEREND:event_ScreenActionPerformed
    try
      {
        RoleScreenPanel user = new RoleScreenPanel(userdto);
        user.setBounds(BasicPanel.getBounds());
        this.setTitle("Role screens");
        this.setContentPane(user);
        this.validate();
        this.repaint();
      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
  }//GEN-LAST:event_ScreenActionPerformed

  private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem1ActionPerformed
  {//GEN-HEADEREND:event_jMenuItem1ActionPerformed
    // TODO add your handling code here:
    // open location panel on main frame by clicking on location menu bar item
    try
      {
        InputFilePanel location = new InputFilePanel(userdto);
        location.setBounds(BasicPanel.getBounds());
        this.setTitle("upload File");
        this.setContentPane(location);
        this.validate();
        this.repaint();
      }
    catch(Exception e)
      {
        e.printStackTrace();
      }
  }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info :
                 javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                //UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");

                break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                               null,
                                                                               ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                               null,
                                                                               ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                               null,
                                                                               ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                               null,
                                                                               ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              
                new MainFrame(userdto).setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenu Auto;
  public javax.swing.JPanel BasicPanel;
  private javax.swing.JMenuItem Building;
  private javax.swing.JMenuItem Course;
  private javax.swing.JMenuItem Department;
  private javax.swing.JMenuItem Employee;
  private javax.swing.JMenuItem Equip;
  private javax.swing.JMenuItem EquipType;
  private javax.swing.JMenuItem EquipmentSpecification;
  private javax.swing.JMenuItem Exit;
  private javax.swing.JMenu File;
  private javax.swing.JMenuItem Floor;
  private javax.swing.JMenu Help;
  private javax.swing.JMenuItem Location;
  private javax.swing.JMenuItem LocationType;
  private javax.swing.JMenuBar MenuBar;
  private javax.swing.JMenuItem Role;
  private javax.swing.JMenuItem Screen;
  private javax.swing.JMenuItem SetAutoExist;
  private javax.swing.JMenuItem SetAutoNew;
  private javax.swing.JMenu SetLocations;
  private javax.swing.JMenu SetManual;
  private javax.swing.JMenuItem SetManualExist;
  private javax.swing.JMenuItem SetManualNew;
  private javax.swing.JMenuItem Staff;
  private javax.swing.JToolBar ToolBar;
  private javax.swing.JToolBar ToolBar1;
  private javax.swing.JMenuItem User;
  private javax.swing.JMenu database;
  private javax.swing.Box.Filler filler1;
  private javax.swing.JButton jButton1;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JMenuItem jMenuItem2;
  private javax.swing.JPopupMenu.Separator jSeparator1;
  private javax.swing.JPopupMenu.Separator jSeparator2;
  private javax.swing.JPopupMenu.Separator jSeparator3;
  private javax.swing.JPopupMenu.Separator jSeparator5;
  private javax.swing.JPopupMenu.Separator jSeparator6;
  private javax.swing.JLabel usernamelabel;
  // End of variables declaration//GEN-END:variables

}



