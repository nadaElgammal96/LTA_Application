
package com.fym.lta.UI;
import com.fym.lta.BAO.BaoFactory;

import com.fym.lta.BAO.EmployeeBao;
import com.fym.lta.DAO.EmployeeDao;
import com.fym.lta.DAO.DaoFactory;
import com.fym.lta.DTO.EmployeeDto;

import java.util.List;

import javax.swing.JOptionPane;


/**
 *
 * @author Mustafa Zalat
 */
public class EmployeePanel extends javax.swing.JPanel {

    /** Creates new form EmployeeJPanel */

    
    /** Creates new form EmpMainFram */
    private void setTableModel(List<EmployeeDto> employees){
        int size=0;
        if(employees != null && !employees.isEmpty()){
            size = employees.size();
            }
        Object [][] empArr = new Object [size][3];
        for(int i =0;i<size;i++){
            empArr[i][0] = employees.get(i).getSsn();
            empArr[i][1] = employees.get(i).getName();
           empArr[i][2] = employees.get(i).getJob();
        }
        employeestable.setModel(new javax.swing.table.DefaultTableModel(empArr,
            new String [] {
                "Ssn", "Name", "Job"
            }
        ));
        
        
    }
    public EmployeePanel() {
        try{
        initComponents();
        EmployeeDao employee;
        employee = new DaoFactory().createEmployeeDao();
        setTableModel(employee.viewAll());  
        }catch (Exception e) {
                // TODO: Add catch code
                e.printStackTrace();
            }

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        Delete = new javax.swing.JButton();
        Refresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeestable = new javax.swing.JTable();
        Save = new javax.swing.JButton();
        SearchText = new javax.swing.JTextField();
        IdLabel = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        CodeLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        ssntext = new javax.swing.JTextField();
        nametext = new javax.swing.JTextField();
        jobtext = new javax.swing.JTextField();
        Nwe = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Delete.setText("Delete ");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 460, 65, -1));

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        add(Refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(439, 460, 75, -1));

        employeestable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ssn", "Name", "Job"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeestable);
        if (employeestable.getColumnModel().getColumnCount() > 0) {
            employeestable.getColumnModel().getColumn(0).setHeaderValue("Ssn");
            employeestable.getColumnModel().getColumn(1).setHeaderValue("Name");
            employeestable.getColumnModel().getColumn(2).setHeaderValue("Job");
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 51, 645, 274));

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        add(Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 460, 74, -1));

        SearchText.setText("Enter text to search");
        SearchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchTextFocusLost(evt);
            }
        });
        SearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTextActionPerformed(evt);
            }
        });
        add(SearchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 13, 448, -1));

        IdLabel.setText("Ssn");
        add(IdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 345, -1, -1));

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 12, 75, -1));

        CodeLabel.setText("Name");
        add(CodeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 376, -1, -1));

        NameLabel.setText("Job");
        add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 404, -1, -1));

        ssntext.setText("Enter Employee Ssn");
        ssntext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ssntextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ssntextFocusLost(evt);
            }
        });
        ssntext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssntextActionPerformed(evt);
            }
        });
        add(ssntext, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 343, 507, -1));

        nametext.setText("Enter Employee Name");
        nametext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nametextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nametextFocusLost(evt);
            }
        });
        nametext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nametextActionPerformed(evt);
            }
        });
        add(nametext, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 371, 507, -1));

        jobtext.setText("Enter Employee Job");
        jobtext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jobtextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jobtextFocusLost(evt);
            }
        });
        add(jobtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 402, 507, -1));

        Nwe.setText("New");
        Nwe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NweActionPerformed(evt);
            }
        });
        add(Nwe, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 460, 60, -1));
    }//GEN-END:initComponents

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        try{
            if(employeestable.getSelectedRowCount()==1)
            {
                EmployeeDto emp = new EmployeeDto();
                EmployeeDao empdao;
                empdao = new DaoFactory().createEmployeeDao();
                EmployeeBao build = new BaoFactory().createEmployeeBao();
                int r = employeestable.getSelectedRow();
                String s = (String) employeestable.getModel().getValueAt(r, 0);
                emp.setSsn(s);
                if(build.delete(emp))
                {
                    JOptionPane.showMessageDialog(this, "Employee Deleted Successfully");
                }
                setTableModel(empdao.viewAll());
                employeestable.repaint();
            }else{
                JOptionPane.showMessageDialog(this, "Please Select Employee in table ");
            }
            ssntext.setText("Enter Employee Ssn");
            nametext.setText("Enter Employee Name");
            jobtext.setText("Enter Employee Job");
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        try{
           // if(checkValidity())
            {
            EmployeeDto emp = new EmployeeDto();
           EmployeeBao build = new BaoFactory().createEmployeeBao();
            EmployeeDao bdao = new DaoFactory().createEmployeeDao();
            emp.setSsn(ssntext.getText());
            emp.setName(nametext.getText());
            emp.setJob(jobtext.getText());
            if(build.update(emp)){
                JOptionPane.showMessageDialog(this, "Employee updated Successfully");
                setTableModel(bdao.viewAll());
                employeestable.repaint();
            }else{
                JOptionPane.showMessageDialog(this, "The Employee is not exist");
                employeestable.repaint();
            }}
            ssntext.setText("Enter Employee Ssn");
            nametext.setText("Enter Employee Name");
            jobtext.setText("Enter Employee Job");
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        try{
            EmployeeDto emp = new EmployeeDto();
            List<EmployeeDto> emps = null;
            EmployeeDao empdao = new DaoFactory().createEmployeeDao();
            EmployeeBao employee = new BaoFactory().createEmployeeBao();
            emp.setSearch(SearchText.getText());
            emps = employee.searchFor(emp);

            if(emps!=null){
                JOptionPane.showMessageDialog(this, "Employee Found");
                setTableModel(emps);
                employeestable.repaint();
            }else{
                JOptionPane.showMessageDialog(this, "Employee is not Exist");
                setTableModel(empdao.viewAll());
                employeestable.repaint();
            }
            SearchText.setText("Enter text to search");
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchActionPerformed

    private void NweActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NweActionPerformed
        // TODO add your handling code here:
        try{
            if(checkValidity()){
            EmployeeDto emp = new EmployeeDto();
            EmployeeBao employee = new BaoFactory().createEmployeeBao();
            EmployeeDao empdao = new DaoFactory().createEmployeeDao();
            emp.setSsn(ssntext.getText());
            emp.setName((nametext.getText()));
            emp.setJob(jobtext.getText());
            
            if(employee.add(emp)){
                JOptionPane.showMessageDialog(this, "Employee Inserted Successfully");
                setTableModel(empdao.viewAll());
                employeestable.repaint();
            }
            else{
                JOptionPane.showMessageDialog(this, "The Employee is already exist");
                 employeestable.repaint();
            }}
                ssntext.setText("Enter Employee Ssn");
                nametext.setText("Enter Employee Name");
                jobtext.setText("Enter Employee Job");
        }catch(Exception e){
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_NweActionPerformed
    
    private void ssntextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssntextActionPerformed
        // TODO add your handling code here:                                                                    
    }//GEN-LAST:event_ssntextActionPerformed

    private void nametextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nametextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nametextActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
         try{
            EmployeeDao employee;
            employee = new DaoFactory().createEmployeeDao();
            setTableModel(employee.viewAll());
            employeestable.repaint();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void SearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTextActionPerformed
        // TODO add your handling code here:                                                              
    }//GEN-LAST:event_SearchTextActionPerformed

    private void ssntextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ssntextFocusGained
    if(ssntext.getText().equalsIgnoreCase("Enter Employee Ssn")){
        ssntext.setText("");}
    }//GEN-LAST:event_ssntextFocusGained

    private void ssntextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ssntextFocusLost
    if(ssntext.getText().trim().equalsIgnoreCase("")){
        ssntext.setText("Enter Employee Ssn");
    }
    }//GEN-LAST:event_ssntextFocusLost

    private void nametextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nametextFocusGained
    if(nametext.getText().equalsIgnoreCase("Enter Employee Name")){
        nametext.setText("");}
    }//GEN-LAST:event_nametextFocusGained

    private void nametextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nametextFocusLost
    if(nametext.getText().trim().equalsIgnoreCase("")){
        nametext.setText("Enter Employee Name");}
    }//GEN-LAST:event_nametextFocusLost

    private void jobtextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jobtextFocusGained
    if(jobtext.getText().equalsIgnoreCase("Enter Employee Job")){
        jobtext.setText("");}
    }//GEN-LAST:event_jobtextFocusGained

    private void jobtextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jobtextFocusLost
    if(jobtext.getText().trim().equalsIgnoreCase("")){
        jobtext.setText("Enter Employee Job");}
    }//GEN-LAST:event_jobtextFocusLost

    private void SearchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchTextFocusGained
    if(SearchText.getText().equalsIgnoreCase("Enter text to search")){
        SearchText.setText("");}
    }//GEN-LAST:event_SearchTextFocusGained

    private void SearchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchTextFocusLost
    if(SearchText.getText().trim().equalsIgnoreCase("")){
        SearchText.setText("Enter text to search");}
    }//GEN-LAST:event_SearchTextFocusLost

    private boolean checkValidity(){

    try{
        if(ssntext.getText().equalsIgnoreCase("Enter Employee Ssn")){
            JOptionPane.showMessageDialog(this, "Please, enter SSN");
            return false;
        }
            Integer.parseInt(ssntext.getText());
            //JOptionPane.showMessageDialog(this, "Code is invalid! \n (please enter a string)");
            return true;
        }catch (NumberFormatException e){
                     // own implemented dialog
            
    try{
        if(nametext.getText().equalsIgnoreCase("Enter Employee Name")){
            JOptionPane.showMessageDialog(this, "Please, enter Name");
            return false;
        }
            Integer.parseInt(nametext.getText());
            JOptionPane.showMessageDialog(this, "Name is invalid! \n (please enter a string)");
            return false;
        }catch (NumberFormatException es){
                     // own implemented dialog
        
        try{
                if(jobtext.getText().equalsIgnoreCase("Enter Employee Job")){
                    JOptionPane.showMessageDialog(this, "Please, enter Job");
                    return false;
                }
                Integer.parseInt(jobtext.getText());
                JOptionPane.showMessageDialog(this, "Job is invalid! \n (please enter a string)");
                return false;
            }
        catch(NumberFormatException ns){
          //  return true;
    return true;
    }
    }
    }
}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CodeLabel;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel IdLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JButton Nwe;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton Save;
    private javax.swing.JTextField SearchText;
    private javax.swing.JTable employeestable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jobtext;
    private javax.swing.JTextField nametext;
    private javax.swing.JButton search;
    private javax.swing.JTextField ssntext;
    // End of variables declaration//GEN-END:variables
    
}

